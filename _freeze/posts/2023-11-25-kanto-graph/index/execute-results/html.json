{
  "hash": "1068a9fe6b325769e56e89c3f3ca9c37",
  "result": {
    "markdown": "---\ntitle: An interactive graph of Pokémon Red locations\ndate: 2023-11-25\nslug: kanto-graph\ncategories:\n  - r\n  - videogames\n  - visNetwork\nresources: \n  - resources/pokemon-font.ttf\n---\n\n\n![This is a preview.](resources/graph-zoom.png){fig-alt=\"Screenshot of an interactive graph. The title is 'Kanto' and the subtitle is 'a graph of locations in Pokémon Red'. A dropdown menu has 'Pallet Town' selected and in red text. A node labelled 'Pallet Town' is shown, highlighted in red, as are other labelled nodes like 'Oak's lab' and 'Blue's house' that it's directly connected to. A greyed-out node is also visible, which is not connected by an edge to the 'Pallet Town' node.\"}\n\n## tl;dr\n\nI extracted data from the disassembled code of Pokémon Red to create an interactive graph of the game's locations and their connections. You can [jump to the graph](#visualise-graph) below.\n\n## Kanto\n\n[I wrote a while back](https://www.rostrum.blog/posts/2021-11-04-kanto-locator/) about using the wonderful `locator()` function to extract coordinates from fictitious maps. In that example I used the Kanto region from [the original Pokémon games](https://en.wikipedia.org/wiki/Pok%C3%A9mon_Red,_Blue,_and_Yellow). \n\nToday I'm back with the same map[^ideas], but we're going to be far more methodical and abstract: we're going to extract data from the underlying game files to build a graph that describes all the locations and connections between them.\n\nThis is made possible by [the 'pret' collaborative](https://github.com/pret), who have reverse-engineered, or 'disassembled', a number of Pokémon games. This is interesting for digi-archaeological reasons[^mew], but also for our frivolous purposes.\n\n## Assemble\n\nTo get a copy of the game's[^blue] disassembled code, go to [the pret/pokered GitHub repo](https://github.com/pret/pokered), click the 'Code' button, then 'Download as zip' and finally unzip the file on your computer. \n\nWe're interested in two subfolders: `/data/maps/objects/` and `/data/maps/headers/`. These both contain one file of [Assembly code](https://en.wikipedia.org/wiki/Assembly_language) per named location in the game, like `AgathasRoom.asm` and `Bikeshop.asm`. We'll be handling these as simple text files.\n\nThe 'objects' files contain information required to set up things like sprites and text for each location in the game. The example below is for the starting area: Pallet Town. For our purposes, we care about the `warp_events`, which indicate that you can step on a tile and be warped somewhere else. For example, standing on the door tile at tile location `5, 5` would warp you to `REDS_HOUSE_1F`, i.e. the first floor of the player's house.\n\n```\nobject_const_def\nconst_export PALLETTOWN_OAK\nconst_export PALLETTOWN_GIRL\nconst_export PALLETTOWN_FISHER\n\nPalletTown_Object:\ndb $b ; border block\n\ndef_warp_events\nwarp_event  5,  5, REDS_HOUSE_1F, 1\nwarp_event 13,  5, BLUES_HOUSE, 1\nwarp_event 12, 11, OAKS_LAB, 2\n\ndef_bg_events\nbg_event 13, 13, TEXT_PALLETTOWN_OAKSLAB_SIGN\nbg_event  7,  9, TEXT_PALLETTOWN_SIGN\nbg_event  3,  5, TEXT_PALLETTOWN_PLAYERSHOUSE_SIGN\nbg_event 11,  5, TEXT_PALLETTOWN_RIVALSHOUSE_SIGN\n\ndef_object_events\nobject_event  8,  5, SPRITE_OAK, STAY, NONE, TEXT_PALLETTOWN_OAK\nobject_event  3,  8, SPRITE_GIRL, WALK, ANY_DIR, TEXT_PALLETTOWN_GIRL\nobject_event 11, 14, SPRITE_FISHER, WALK, ANY_DIR, TEXT_PALLETTOWN_FISHER\n\ndef_warps_to PALLET_TOWN\n```\n\nSome terminology for graphs: the game's locations are 'nodes' connected by common 'edges'. So Pallet Town and Red's House are nodes that share an edge.\n\nNote that warping isn't the only thing that creates an edge between two nodes. If we look in the 'headers' file for Pallet Town, you can see that some locations have a simple `connection` parameter: you can just walk north of Pallet Town to Route 1 (the road to Viridian City) or approach from the south along Route 21 (from Cinnabar Island). Yes, 'routes' connect two places, but routes themselves act as nodes in this demo.\n\n```\nmap_header PalletTown, PALLET_TOWN, OVERWORLD, NORTH | SOUTH\nconnection north, Route1, ROUTE_1, 0\nconnection south, Route21, ROUTE_21, 0\nend_map_header\n```\n\nThe headers file is useful to us in another way: it maps location names from the 'PalletTown' format (used in .asm filenames) to the 'PALLET_TOWN' format (as referenced within files). This knowledge will help us to better handle the data as we progress.\n\n## Prepare data\n\nSo let's crack open the data and use some base R for corralling. Note that absolutely nothing here is optimised (or even written well in the first place), but regular readers will be used to that.\n\n### Prepare functions\n\nTo begin, I've made a few helper functions to extract and wrangle the data that we need:\n\n* `get_file_paths()` to return the filepaths for all the Assembly files (.asm) we need\n* `get_warps()` to extract the warps in the text of each objects file\n* `get_connections()` to extract and wrangle all the connections from the headers files\n* `create_names_lookup()` to map the UpperCamelCase and SCREAMING_SNAKE_CASE name variants for each location\n\n<details><summary>Click for function definitions.</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_file_paths <- function(\n    dir = \"~/Documents/data/pokered-master/data/maps\",\n    type = c(\"objects\", \"headers\")\n) {\n  path <- file.path(dir, type)\n  list.files(path, pattern = \".asm$\", full.names = TRUE)\n}\n\nget_warps <- function(objects_content) {\n  warp_string <- \"warp_event \"\n  warp_events <- objects_content[grepl(warp_string, objects_content)]\n  warp_events <- strsplit(warp_events, \", \")\n  warp_events <- lapply(warp_events, `[[`, 3)  # third element is warps\n  unique(unlist(warp_events))  # vector of unique locations\n}\n\nget_connections <- function(headers_content) {\n  con_string <- \"connection\"\n  con_detected <- headers_content[grepl(con_string, headers_content)]\n  con_isolated <- lapply(con_detected, \\(x) x[which(grepl(con_string, x))])\n  lapply(con_isolated, \\(x) unlist(lapply(strsplit(x, \", \"), `[[`, 3)))\n}\n\ncreate_names_lookup <- function(headers_content) {\n  headers_split <- strsplit(headers_content, \",\")[[1]]\n  headers_split <- headers_split[1:2]\n  name_pair <- gsub(\"map_header \", \"\", trimws(headers_split))\n  setNames(name_pair[1], name_pair[2])\n}\n```\n:::\n\n\n</details>\n\n### Extract connections\n\nNow down to business. We'll read the text content of each headers file into a list, then name these elements using the SCREAMING_SNAKE_CASE name for each location.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheaders_files <- get_file_paths(type = \"headers\")\nheaders_content <- lapply(headers_files, readLines)\nheaders_lookup <- unlist(lapply(headers_content, create_names_lookup))\nnames(headers_content) <- names(headers_lookup)\n```\n:::\n\n\nHere's how Pallet Town looks in this format:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheaders_content[\"PALLET_TOWN\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$PALLET_TOWN\n[1] \"\\tmap_header PalletTown, PALLET_TOWN, OVERWORLD, NORTH | SOUTH\"\n[2] \"\\tconnection north, Route1, ROUTE_1, 0\"                        \n[3] \"\\tconnection south, Route21, ROUTE_21, 0\"                      \n[4] \"\\tend_map_header\"                                              \n```\n:::\n:::\n\n\nNow we can take these lines of text and extract the node pairs that have an edge due to a 'connection' between them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconns <- get_connections(headers_content)\nconns_df <- stack(conns)\nconns_df <- conns_df[, c(\"ind\", \"values\")]\nnames(conns_df) <- c(\"from\", \"to\")\nconns_df[[\"from\"]] <- as.character(conns_df[[\"from\"]])\nhead(conns_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           from       to\n1  CELADON_CITY ROUTE_16\n2  CELADON_CITY  ROUTE_7\n3 CERULEAN_CITY ROUTE_24\n4 CERULEAN_CITY  ROUTE_5\n5 CERULEAN_CITY  ROUTE_4\n6 CERULEAN_CITY  ROUTE_9\n```\n:::\n:::\n\n\n### Extract warps\n\nSimilarly, we can get the warp data in a node-pair data frame as well. The first step is to read the text of each objects file into a list.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobj_files <- get_file_paths(type = \"objects\")\nobj_names <- gsub(\".asm\", \"\", basename(obj_files))\nobj_content <- lapply(obj_files, readLines) |> setNames(names(headers_lookup))\nobj_content[\"PALLET_TOWN\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$PALLET_TOWN\n [1] \"\\tobject_const_def\"                                                         \n [2] \"\\tconst_export PALLETTOWN_OAK\"                                              \n [3] \"\\tconst_export PALLETTOWN_GIRL\"                                             \n [4] \"\\tconst_export PALLETTOWN_FISHER\"                                           \n [5] \"\"                                                                           \n [6] \"PalletTown_Object:\"                                                         \n [7] \"\\tdb $b ; border block\"                                                     \n [8] \"\"                                                                           \n [9] \"\\tdef_warp_events\"                                                          \n[10] \"\\twarp_event  5,  5, REDS_HOUSE_1F, 1\"                                      \n[11] \"\\twarp_event 13,  5, BLUES_HOUSE, 1\"                                        \n[12] \"\\twarp_event 12, 11, OAKS_LAB, 2\"                                           \n[13] \"\"                                                                           \n[14] \"\\tdef_bg_events\"                                                            \n[15] \"\\tbg_event 13, 13, TEXT_PALLETTOWN_OAKSLAB_SIGN\"                            \n[16] \"\\tbg_event  7,  9, TEXT_PALLETTOWN_SIGN\"                                    \n[17] \"\\tbg_event  3,  5, TEXT_PALLETTOWN_PLAYERSHOUSE_SIGN\"                       \n[18] \"\\tbg_event 11,  5, TEXT_PALLETTOWN_RIVALSHOUSE_SIGN\"                        \n[19] \"\"                                                                           \n[20] \"\\tdef_object_events\"                                                        \n[21] \"\\tobject_event  8,  5, SPRITE_OAK, STAY, NONE, TEXT_PALLETTOWN_OAK\"         \n[22] \"\\tobject_event  3,  8, SPRITE_GIRL, WALK, ANY_DIR, TEXT_PALLETTOWN_GIRL\"    \n[23] \"\\tobject_event 11, 14, SPRITE_FISHER, WALK, ANY_DIR, TEXT_PALLETTOWN_FISHER\"\n[24] \"\"                                                                           \n[25] \"\\tdef_warps_to PALLET_TOWN\"                                                 \n```\n:::\n:::\n\n\nThen we can extract the warps. Note that some warps don't explicitly take you back where you came from. Instead the instruction is to warp to the last location. We can remove this from our data, since `LAST_MAP` isn't a literal location.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwarps <- lapply(obj_content, get_warps)\nwarps <- lapply(warps, \\(x) x[x != \"LAST_MAP\"])  # remove LAST_MAP\nwarps <- warps[lengths(warps) > 0]\nwarps_df <- stack(warps)  # to data.frame\nwarps_df <- warps_df[, c(\"ind\", \"values\")]\nnames(warps_df) <- c(\"from\", \"to\")\nwarps_df[[\"from\"]] <- as.character(warps_df[[\"from\"]])\nhead(warps_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          from                 to\n1 AGATHAS_ROOM        BRUNOS_ROOM\n2 AGATHAS_ROOM        LANCES_ROOM\n3  BRUNOS_ROOM      LORELEIS_ROOM\n4  BRUNOS_ROOM       AGATHAS_ROOM\n5 CELADON_CITY    CELADON_MART_1F\n6 CELADON_CITY CELADON_MANSION_1F\n```\n:::\n:::\n\n\n### Combine all node pairs\n\nNow we can combine all the node pairs that share edges, whether by simple connections or warps. In this example we're interested in combinations, rather than permutations, of node pairs[^so]. This means that we can treat A→B and B→A as equivalent and simplify down to just A→B.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedges <- rbind(warps_df, conns_df)\nedges <- edges[!duplicated(data.frame(t(apply(edges, 1, sort)))), ]  # https://stackoverflow.com/a/50117582\n```\n:::\n\n\nWe also want a full list of the nodes, which will help us to label and filter them in the final visualisation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes <- data.frame(id = unique(c(edges[[\"from\"]], edges[[\"to\"]])))\nnodes <- nodes[order(nodes[[\"id\"]]), , drop = FALSE]\n```\n:::\n\n\n## Visualise\n\n### Set up\n\n[The {visNetwork} package](https://datastorm-open.github.io/visNetwork/) wraps [the vis.js JavaScript library](https://visjs.org/), which will help output an interactive HTML graph. We just need to feed it our nodes and edges and a bunch of configuration and styling options. \n\nFirst some CSS to import a font that mimics the font used in the game[^font].\n\n\n::: {.cell}\n\n```{.css .cell-code}\n@font-face {\n  font-family: 'pokemon-font';\n  src: url('resources/pokemon-font.ttf');\n}\n```\n\n\n<style type=\"text/css\">\n@font-face {\n  font-family: 'pokemon-font';\n  src: url('resources/pokemon-font.ttf');\n}\n</style>\n:::\n\n\nWhile we're dealing with font style, we can set up a function to build a CSS style string for when we need it in the visNetwork. Obviously we'll use red as the accent colour, given the data is for the Red version of the game[^passion].\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoke_style <- function(size = 16, colour = \"black\") {\n  paste0(\n    \"font-family:pokemon-font,sans-serif;\",\n    \"font-size:\", size, \"px;\",\n    \"color:\", colour, \";\"\n  )\n}\n```\n:::\n\n\nNow we can build the visNetwork object with `vis*` functions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(visNetwork)\n\ngraph <- visNetwork(\n  nodes,\n  edges,\n  width = \"100%\",\n  height = \"600px\",\n  main = list(text = \"Kanto\", style = poke_style(30)),\n  submain = list(\n    text = \"A graph of locations in PKMN Red<br><br>\",\n    style = poke_style()\n  ),\n  footer = list(\n    text = \"Source: Nintendo and Game Freak via the pret/pokered dissassembly project\",\n    style = poke_style(8)\n  )\n) |>\n  visEdges(\n    color = list(color = \"#FF7777\", highlight = \"red\", opacity = 0.5),\n    width = 3,\n    selectionWidth = 5\n  ) |>\n  visNodes(\n    color = \"#FF7777\",\n    font = list(face = \"pokemon-font\", size = 14),\n    borderWidth = 0,\n    borderWidthSelected = 3,\n  ) |>\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = list(\n      enabled = TRUE, \n      main = \"Select a location\",\n      style = poke_style(colour = \"red\")\n    )\n  ) |>\n  visLayout(randomSeed = 150) |>\n  visPhysics(\n    solver = \"barnesHut\",\n    barnesHut = list(springConstant = 0.1, gravitationalConstant = -10000)\n  )\n```\n:::\n\n\n### The graph {#visualise-graph}\n\nSo here's the final result:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-e8f60ff3585b18e7d80c\" style=\"width:100%;height:600px;\" class=\"visNetwork html-widget \"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e8f60ff3585b18e7d80c\">{\"x\":{\"nodes\":{\"id\":[\"AGATHAS_ROOM\",\"BIKE_SHOP\",\"BILLS_HOUSE\",\"BLUES_HOUSE\",\"BRUNOS_ROOM\",\"CELADON_CHIEF_HOUSE\",\"CELADON_CITY\",\"CELADON_DINER\",\"CELADON_GYM\",\"CELADON_HOTEL\",\"CELADON_MANSION_1F\",\"CELADON_MANSION_2F\",\"CELADON_MANSION_3F\",\"CELADON_MANSION_ROOF\",\"CELADON_MANSION_ROOF_HOUSE\",\"CELADON_MART_1F\",\"CELADON_MART_2F\",\"CELADON_MART_3F\",\"CELADON_MART_4F\",\"CELADON_MART_5F\",\"CELADON_MART_ELEVATOR\",\"CELADON_MART_ROOF\",\"CELADON_POKECENTER\",\"CERULEAN_BADGE_HOUSE\",\"CERULEAN_CAVE_1F\",\"CERULEAN_CAVE_2F\",\"CERULEAN_CAVE_B1F\",\"CERULEAN_CITY\",\"CERULEAN_GYM\",\"CERULEAN_MART\",\"CERULEAN_POKECENTER\",\"CERULEAN_TRADE_HOUSE\",\"CERULEAN_TRASHED_HOUSE\",\"CHAMPIONS_ROOM\",\"CINNABAR_GYM\",\"CINNABAR_ISLAND\",\"CINNABAR_LAB\",\"CINNABAR_LAB_FOSSIL_ROOM\",\"CINNABAR_LAB_METRONOME_ROOM\",\"CINNABAR_LAB_TRADE_ROOM\",\"CINNABAR_MART\",\"CINNABAR_POKECENTER\",\"COPYCATS_HOUSE_1F\",\"COPYCATS_HOUSE_2F\",\"DAYCARE\",\"DIGLETTS_CAVE\",\"DIGLETTS_CAVE_ROUTE_11\",\"DIGLETTS_CAVE_ROUTE_2\",\"FIGHTING_DOJO\",\"FUCHSIA_BILLS_GRANDPAS_HOUSE\",\"FUCHSIA_CITY\",\"FUCHSIA_GOOD_ROD_HOUSE\",\"FUCHSIA_GYM\",\"FUCHSIA_MART\",\"FUCHSIA_MEETING_ROOM\",\"FUCHSIA_POKECENTER\",\"GAME_CORNER\",\"GAME_CORNER_PRIZE_ROOM\",\"HALL_OF_FAME\",\"INDIGO_PLATEAU\",\"INDIGO_PLATEAU_LOBBY\",\"LANCES_ROOM\",\"LAVENDER_CUBONE_HOUSE\",\"LAVENDER_MART\",\"LAVENDER_POKECENTER\",\"LAVENDER_TOWN\",\"LORELEIS_ROOM\",\"MR_FUJIS_HOUSE\",\"MR_PSYCHICS_HOUSE\",\"MT_MOON_1F\",\"MT_MOON_B1F\",\"MT_MOON_B2F\",\"MT_MOON_POKECENTER\",\"MUSEUM_1F\",\"MUSEUM_2F\",\"NAME_RATERS_HOUSE\",\"OAKS_LAB\",\"PALLET_TOWN\",\"PEWTER_CITY\",\"PEWTER_GYM\",\"PEWTER_MART\",\"PEWTER_NIDORAN_HOUSE\",\"PEWTER_POKECENTER\",\"PEWTER_SPEECH_HOUSE\",\"POKEMON_FAN_CLUB\",\"POKEMON_MANSION_1F\",\"POKEMON_MANSION_2F\",\"POKEMON_MANSION_3F\",\"POKEMON_MANSION_B1F\",\"POKEMON_TOWER_1F\",\"POKEMON_TOWER_2F\",\"POKEMON_TOWER_3F\",\"POKEMON_TOWER_4F\",\"POKEMON_TOWER_5F\",\"POKEMON_TOWER_6F\",\"POKEMON_TOWER_7F\",\"POWER_PLANT\",\"REDS_HOUSE_1F\",\"REDS_HOUSE_2F\",\"ROCK_TUNNEL_1F\",\"ROCK_TUNNEL_B1F\",\"ROCK_TUNNEL_POKECENTER\",\"ROCKET_HIDEOUT_B1F\",\"ROCKET_HIDEOUT_B2F\",\"ROCKET_HIDEOUT_B3F\",\"ROCKET_HIDEOUT_B4F\",\"ROCKET_HIDEOUT_ELEVATOR\",\"ROUTE_1\",\"ROUTE_10\",\"ROUTE_11\",\"ROUTE_11_GATE_1F\",\"ROUTE_11_GATE_2F\",\"ROUTE_12\",\"ROUTE_12_GATE_1F\",\"ROUTE_12_GATE_2F\",\"ROUTE_12_SUPER_ROD_HOUSE\",\"ROUTE_13\",\"ROUTE_14\",\"ROUTE_15\",\"ROUTE_15_GATE_1F\",\"ROUTE_15_GATE_2F\",\"ROUTE_16\",\"ROUTE_16_FLY_HOUSE\",\"ROUTE_16_GATE_1F\",\"ROUTE_16_GATE_2F\",\"ROUTE_17\",\"ROUTE_18\",\"ROUTE_18_GATE_1F\",\"ROUTE_18_GATE_2F\",\"ROUTE_19\",\"ROUTE_2\",\"ROUTE_2_GATE\",\"ROUTE_2_TRADE_HOUSE\",\"ROUTE_20\",\"ROUTE_21\",\"ROUTE_22\",\"ROUTE_22_GATE\",\"ROUTE_23\",\"ROUTE_24\",\"ROUTE_25\",\"ROUTE_3\",\"ROUTE_4\",\"ROUTE_5\",\"ROUTE_5_GATE\",\"ROUTE_6\",\"ROUTE_6_GATE\",\"ROUTE_7\",\"ROUTE_7_GATE\",\"ROUTE_8\",\"ROUTE_8_GATE\",\"ROUTE_9\",\"SAFARI_ZONE_CENTER\",\"SAFARI_ZONE_CENTER_REST_HOUSE\",\"SAFARI_ZONE_EAST\",\"SAFARI_ZONE_EAST_REST_HOUSE\",\"SAFARI_ZONE_GATE\",\"SAFARI_ZONE_NORTH\",\"SAFARI_ZONE_NORTH_REST_HOUSE\",\"SAFARI_ZONE_SECRET_HOUSE\",\"SAFARI_ZONE_WEST\",\"SAFARI_ZONE_WEST_REST_HOUSE\",\"SAFFRON_CITY\",\"SAFFRON_GYM\",\"SAFFRON_MART\",\"SAFFRON_PIDGEY_HOUSE\",\"SAFFRON_POKECENTER\",\"SEAFOAM_ISLANDS_1F\",\"SEAFOAM_ISLANDS_B1F\",\"SEAFOAM_ISLANDS_B2F\",\"SEAFOAM_ISLANDS_B3F\",\"SEAFOAM_ISLANDS_B4F\",\"SILPH_CO_10F\",\"SILPH_CO_11F\",\"SILPH_CO_1F\",\"SILPH_CO_2F\",\"SILPH_CO_3F\",\"SILPH_CO_4F\",\"SILPH_CO_5F\",\"SILPH_CO_6F\",\"SILPH_CO_7F\",\"SILPH_CO_8F\",\"SILPH_CO_9F\",\"SILPH_CO_ELEVATOR\",\"SS_ANNE_1F\",\"SS_ANNE_1F_ROOMS\",\"SS_ANNE_2F\",\"SS_ANNE_2F_ROOMS\",\"SS_ANNE_3F\",\"SS_ANNE_B1F\",\"SS_ANNE_B1F_ROOMS\",\"SS_ANNE_BOW\",\"SS_ANNE_CAPTAINS_ROOM\",\"SS_ANNE_KITCHEN\",\"UNDERGROUND_PATH_NORTH_SOUTH\",\"UNDERGROUND_PATH_ROUTE_5\",\"UNDERGROUND_PATH_ROUTE_6\",\"UNDERGROUND_PATH_ROUTE_7\",\"UNDERGROUND_PATH_ROUTE_8\",\"UNDERGROUND_PATH_WEST_EAST\",\"UNUSED_MAP_ED\",\"VERMILION_CITY\",\"VERMILION_DOCK\",\"VERMILION_GYM\",\"VERMILION_MART\",\"VERMILION_OLD_ROD_HOUSE\",\"VERMILION_PIDGEY_HOUSE\",\"VERMILION_POKECENTER\",\"VERMILION_TRADE_HOUSE\",\"VICTORY_ROAD_1F\",\"VICTORY_ROAD_2F\",\"VICTORY_ROAD_3F\",\"VIRIDIAN_CITY\",\"VIRIDIAN_FOREST\",\"VIRIDIAN_FOREST_NORTH_GATE\",\"VIRIDIAN_FOREST_SOUTH_GATE\",\"VIRIDIAN_GYM\",\"VIRIDIAN_MART\",\"VIRIDIAN_NICKNAME_HOUSE\",\"VIRIDIAN_POKECENTER\",\"VIRIDIAN_SCHOOL_HOUSE\",\"WARDENS_HOUSE\"],\"label\":[\"AGATHAS_ROOM\",\"BIKE_SHOP\",\"BILLS_HOUSE\",\"BLUES_HOUSE\",\"BRUNOS_ROOM\",\"CELADON_CHIEF_HOUSE\",\"CELADON_CITY\",\"CELADON_DINER\",\"CELADON_GYM\",\"CELADON_HOTEL\",\"CELADON_MANSION_1F\",\"CELADON_MANSION_2F\",\"CELADON_MANSION_3F\",\"CELADON_MANSION_ROOF\",\"CELADON_MANSION_ROOF_HOUSE\",\"CELADON_MART_1F\",\"CELADON_MART_2F\",\"CELADON_MART_3F\",\"CELADON_MART_4F\",\"CELADON_MART_5F\",\"CELADON_MART_ELEVATOR\",\"CELADON_MART_ROOF\",\"CELADON_POKECENTER\",\"CERULEAN_BADGE_HOUSE\",\"CERULEAN_CAVE_1F\",\"CERULEAN_CAVE_2F\",\"CERULEAN_CAVE_B1F\",\"CERULEAN_CITY\",\"CERULEAN_GYM\",\"CERULEAN_MART\",\"CERULEAN_POKECENTER\",\"CERULEAN_TRADE_HOUSE\",\"CERULEAN_TRASHED_HOUSE\",\"CHAMPIONS_ROOM\",\"CINNABAR_GYM\",\"CINNABAR_ISLAND\",\"CINNABAR_LAB\",\"CINNABAR_LAB_FOSSIL_ROOM\",\"CINNABAR_LAB_METRONOME_ROOM\",\"CINNABAR_LAB_TRADE_ROOM\",\"CINNABAR_MART\",\"CINNABAR_POKECENTER\",\"COPYCATS_HOUSE_1F\",\"COPYCATS_HOUSE_2F\",\"DAYCARE\",\"DIGLETTS_CAVE\",\"DIGLETTS_CAVE_ROUTE_11\",\"DIGLETTS_CAVE_ROUTE_2\",\"FIGHTING_DOJO\",\"FUCHSIA_BILLS_GRANDPAS_HOUSE\",\"FUCHSIA_CITY\",\"FUCHSIA_GOOD_ROD_HOUSE\",\"FUCHSIA_GYM\",\"FUCHSIA_MART\",\"FUCHSIA_MEETING_ROOM\",\"FUCHSIA_POKECENTER\",\"GAME_CORNER\",\"GAME_CORNER_PRIZE_ROOM\",\"HALL_OF_FAME\",\"INDIGO_PLATEAU\",\"INDIGO_PLATEAU_LOBBY\",\"LANCES_ROOM\",\"LAVENDER_CUBONE_HOUSE\",\"LAVENDER_MART\",\"LAVENDER_POKECENTER\",\"LAVENDER_TOWN\",\"LORELEIS_ROOM\",\"MR_FUJIS_HOUSE\",\"MR_PSYCHICS_HOUSE\",\"MT_MOON_1F\",\"MT_MOON_B1F\",\"MT_MOON_B2F\",\"MT_MOON_POKECENTER\",\"MUSEUM_1F\",\"MUSEUM_2F\",\"NAME_RATERS_HOUSE\",\"OAKS_LAB\",\"PALLET_TOWN\",\"PEWTER_CITY\",\"PEWTER_GYM\",\"PEWTER_MART\",\"PEWTER_NIDORAN_HOUSE\",\"PEWTER_POKECENTER\",\"PEWTER_SPEECH_HOUSE\",\"POKEMON_FAN_CLUB\",\"POKEMON_MANSION_1F\",\"POKEMON_MANSION_2F\",\"POKEMON_MANSION_3F\",\"POKEMON_MANSION_B1F\",\"POKEMON_TOWER_1F\",\"POKEMON_TOWER_2F\",\"POKEMON_TOWER_3F\",\"POKEMON_TOWER_4F\",\"POKEMON_TOWER_5F\",\"POKEMON_TOWER_6F\",\"POKEMON_TOWER_7F\",\"POWER_PLANT\",\"REDS_HOUSE_1F\",\"REDS_HOUSE_2F\",\"ROCK_TUNNEL_1F\",\"ROCK_TUNNEL_B1F\",\"ROCK_TUNNEL_POKECENTER\",\"ROCKET_HIDEOUT_B1F\",\"ROCKET_HIDEOUT_B2F\",\"ROCKET_HIDEOUT_B3F\",\"ROCKET_HIDEOUT_B4F\",\"ROCKET_HIDEOUT_ELEVATOR\",\"ROUTE_1\",\"ROUTE_10\",\"ROUTE_11\",\"ROUTE_11_GATE_1F\",\"ROUTE_11_GATE_2F\",\"ROUTE_12\",\"ROUTE_12_GATE_1F\",\"ROUTE_12_GATE_2F\",\"ROUTE_12_SUPER_ROD_HOUSE\",\"ROUTE_13\",\"ROUTE_14\",\"ROUTE_15\",\"ROUTE_15_GATE_1F\",\"ROUTE_15_GATE_2F\",\"ROUTE_16\",\"ROUTE_16_FLY_HOUSE\",\"ROUTE_16_GATE_1F\",\"ROUTE_16_GATE_2F\",\"ROUTE_17\",\"ROUTE_18\",\"ROUTE_18_GATE_1F\",\"ROUTE_18_GATE_2F\",\"ROUTE_19\",\"ROUTE_2\",\"ROUTE_2_GATE\",\"ROUTE_2_TRADE_HOUSE\",\"ROUTE_20\",\"ROUTE_21\",\"ROUTE_22\",\"ROUTE_22_GATE\",\"ROUTE_23\",\"ROUTE_24\",\"ROUTE_25\",\"ROUTE_3\",\"ROUTE_4\",\"ROUTE_5\",\"ROUTE_5_GATE\",\"ROUTE_6\",\"ROUTE_6_GATE\",\"ROUTE_7\",\"ROUTE_7_GATE\",\"ROUTE_8\",\"ROUTE_8_GATE\",\"ROUTE_9\",\"SAFARI_ZONE_CENTER\",\"SAFARI_ZONE_CENTER_REST_HOUSE\",\"SAFARI_ZONE_EAST\",\"SAFARI_ZONE_EAST_REST_HOUSE\",\"SAFARI_ZONE_GATE\",\"SAFARI_ZONE_NORTH\",\"SAFARI_ZONE_NORTH_REST_HOUSE\",\"SAFARI_ZONE_SECRET_HOUSE\",\"SAFARI_ZONE_WEST\",\"SAFARI_ZONE_WEST_REST_HOUSE\",\"SAFFRON_CITY\",\"SAFFRON_GYM\",\"SAFFRON_MART\",\"SAFFRON_PIDGEY_HOUSE\",\"SAFFRON_POKECENTER\",\"SEAFOAM_ISLANDS_1F\",\"SEAFOAM_ISLANDS_B1F\",\"SEAFOAM_ISLANDS_B2F\",\"SEAFOAM_ISLANDS_B3F\",\"SEAFOAM_ISLANDS_B4F\",\"SILPH_CO_10F\",\"SILPH_CO_11F\",\"SILPH_CO_1F\",\"SILPH_CO_2F\",\"SILPH_CO_3F\",\"SILPH_CO_4F\",\"SILPH_CO_5F\",\"SILPH_CO_6F\",\"SILPH_CO_7F\",\"SILPH_CO_8F\",\"SILPH_CO_9F\",\"SILPH_CO_ELEVATOR\",\"SS_ANNE_1F\",\"SS_ANNE_1F_ROOMS\",\"SS_ANNE_2F\",\"SS_ANNE_2F_ROOMS\",\"SS_ANNE_3F\",\"SS_ANNE_B1F\",\"SS_ANNE_B1F_ROOMS\",\"SS_ANNE_BOW\",\"SS_ANNE_CAPTAINS_ROOM\",\"SS_ANNE_KITCHEN\",\"UNDERGROUND_PATH_NORTH_SOUTH\",\"UNDERGROUND_PATH_ROUTE_5\",\"UNDERGROUND_PATH_ROUTE_6\",\"UNDERGROUND_PATH_ROUTE_7\",\"UNDERGROUND_PATH_ROUTE_8\",\"UNDERGROUND_PATH_WEST_EAST\",\"UNUSED_MAP_ED\",\"VERMILION_CITY\",\"VERMILION_DOCK\",\"VERMILION_GYM\",\"VERMILION_MART\",\"VERMILION_OLD_ROD_HOUSE\",\"VERMILION_PIDGEY_HOUSE\",\"VERMILION_POKECENTER\",\"VERMILION_TRADE_HOUSE\",\"VICTORY_ROAD_1F\",\"VICTORY_ROAD_2F\",\"VICTORY_ROAD_3F\",\"VIRIDIAN_CITY\",\"VIRIDIAN_FOREST\",\"VIRIDIAN_FOREST_NORTH_GATE\",\"VIRIDIAN_FOREST_SOUTH_GATE\",\"VIRIDIAN_GYM\",\"VIRIDIAN_MART\",\"VIRIDIAN_NICKNAME_HOUSE\",\"VIRIDIAN_POKECENTER\",\"VIRIDIAN_SCHOOL_HOUSE\",\"WARDENS_HOUSE\"]},\"edges\":{\"from\":[\"AGATHAS_ROOM\",\"AGATHAS_ROOM\",\"BRUNOS_ROOM\",\"CELADON_CITY\",\"CELADON_CITY\",\"CELADON_CITY\",\"CELADON_CITY\",\"CELADON_CITY\",\"CELADON_CITY\",\"CELADON_CITY\",\"CELADON_CITY\",\"CELADON_CITY\",\"CELADON_CITY\",\"CELADON_MANSION_1F\",\"CELADON_MANSION_2F\",\"CELADON_MANSION_3F\",\"CELADON_MANSION_ROOF\",\"CELADON_MART_1F\",\"CELADON_MART_1F\",\"CELADON_MART_2F\",\"CELADON_MART_2F\",\"CELADON_MART_3F\",\"CELADON_MART_3F\",\"CELADON_MART_4F\",\"CELADON_MART_4F\",\"CELADON_MART_5F\",\"CELADON_MART_5F\",\"CERULEAN_CAVE_1F\",\"CERULEAN_CAVE_1F\",\"CERULEAN_CITY\",\"CERULEAN_CITY\",\"CERULEAN_CITY\",\"CERULEAN_CITY\",\"CERULEAN_CITY\",\"CERULEAN_CITY\",\"CERULEAN_CITY\",\"CERULEAN_CITY\",\"CHAMPIONS_ROOM\",\"CHAMPIONS_ROOM\",\"CINNABAR_ISLAND\",\"CINNABAR_ISLAND\",\"CINNABAR_ISLAND\",\"CINNABAR_ISLAND\",\"CINNABAR_ISLAND\",\"CINNABAR_LAB\",\"CINNABAR_LAB\",\"CINNABAR_LAB\",\"COPYCATS_HOUSE_1F\",\"DIGLETTS_CAVE\",\"DIGLETTS_CAVE\",\"FUCHSIA_CITY\",\"FUCHSIA_CITY\",\"FUCHSIA_CITY\",\"FUCHSIA_CITY\",\"FUCHSIA_CITY\",\"FUCHSIA_CITY\",\"FUCHSIA_CITY\",\"FUCHSIA_CITY\",\"GAME_CORNER\",\"INDIGO_PLATEAU\",\"INDIGO_PLATEAU_LOBBY\",\"LAVENDER_TOWN\",\"LAVENDER_TOWN\",\"LAVENDER_TOWN\",\"LAVENDER_TOWN\",\"LAVENDER_TOWN\",\"LAVENDER_TOWN\",\"MT_MOON_1F\",\"MT_MOON_B1F\",\"MUSEUM_1F\",\"PALLET_TOWN\",\"PALLET_TOWN\",\"PALLET_TOWN\",\"PEWTER_CITY\",\"PEWTER_CITY\",\"PEWTER_CITY\",\"PEWTER_CITY\",\"PEWTER_CITY\",\"PEWTER_CITY\",\"POKEMON_MANSION_1F\",\"POKEMON_MANSION_1F\",\"POKEMON_MANSION_2F\",\"POKEMON_TOWER_1F\",\"POKEMON_TOWER_2F\",\"POKEMON_TOWER_3F\",\"POKEMON_TOWER_4F\",\"POKEMON_TOWER_5F\",\"POKEMON_TOWER_6F\",\"REDS_HOUSE_1F\",\"ROCKET_HIDEOUT_B1F\",\"ROCKET_HIDEOUT_B1F\",\"ROCKET_HIDEOUT_B2F\",\"ROCKET_HIDEOUT_B2F\",\"ROCKET_HIDEOUT_B3F\",\"ROCKET_HIDEOUT_B4F\",\"ROCK_TUNNEL_1F\",\"ROUTE_10\",\"ROUTE_10\",\"ROUTE_10\",\"ROUTE_11\",\"ROUTE_11\",\"ROUTE_11_GATE_1F\",\"ROUTE_12\",\"ROUTE_12\",\"ROUTE_12_GATE_1F\",\"ROUTE_15\",\"ROUTE_15_GATE_1F\",\"ROUTE_16\",\"ROUTE_16\",\"ROUTE_16_GATE_1F\",\"ROUTE_18\",\"ROUTE_18_GATE_1F\",\"ROUTE_2\",\"ROUTE_2\",\"ROUTE_2\",\"ROUTE_2\",\"ROUTE_2\",\"ROUTE_20\",\"ROUTE_22\",\"ROUTE_23\",\"ROUTE_23\",\"ROUTE_23\",\"ROUTE_25\",\"ROUTE_4\",\"ROUTE_4\",\"ROUTE_4\",\"ROUTE_5\",\"ROUTE_5\",\"ROUTE_5\",\"ROUTE_6\",\"ROUTE_6\",\"ROUTE_7\",\"ROUTE_7\",\"ROUTE_8\",\"ROUTE_8\",\"SAFARI_ZONE_CENTER\",\"SAFARI_ZONE_CENTER\",\"SAFARI_ZONE_CENTER\",\"SAFARI_ZONE_CENTER\",\"SAFARI_ZONE_CENTER\",\"SAFARI_ZONE_EAST\",\"SAFARI_ZONE_EAST\",\"SAFARI_ZONE_NORTH\",\"SAFARI_ZONE_NORTH\",\"SAFARI_ZONE_SECRET_HOUSE\",\"SAFARI_ZONE_WEST\",\"SAFFRON_CITY\",\"SAFFRON_CITY\",\"SAFFRON_CITY\",\"SAFFRON_CITY\",\"SAFFRON_CITY\",\"SAFFRON_CITY\",\"SAFFRON_CITY\",\"SAFFRON_CITY\",\"SAFFRON_GYM\",\"SEAFOAM_ISLANDS_1F\",\"SEAFOAM_ISLANDS_B1F\",\"SEAFOAM_ISLANDS_B2F\",\"SEAFOAM_ISLANDS_B3F\",\"SILPH_CO_10F\",\"SILPH_CO_10F\",\"SILPH_CO_10F\",\"SILPH_CO_10F\",\"SILPH_CO_11F\",\"SILPH_CO_11F\",\"SILPH_CO_1F\",\"SILPH_CO_1F\",\"SILPH_CO_1F\",\"SILPH_CO_2F\",\"SILPH_CO_2F\",\"SILPH_CO_2F\",\"SILPH_CO_2F\",\"SILPH_CO_3F\",\"SILPH_CO_3F\",\"SILPH_CO_3F\",\"SILPH_CO_3F\",\"SILPH_CO_3F\",\"SILPH_CO_3F\",\"SILPH_CO_4F\",\"SILPH_CO_4F\",\"SILPH_CO_4F\",\"SILPH_CO_5F\",\"SILPH_CO_5F\",\"SILPH_CO_5F\",\"SILPH_CO_5F\",\"SILPH_CO_6F\",\"SILPH_CO_6F\",\"SILPH_CO_7F\",\"SILPH_CO_7F\",\"SILPH_CO_8F\",\"SILPH_CO_8F\",\"SILPH_CO_8F\",\"SILPH_CO_9F\",\"SILPH_CO_ELEVATOR\",\"SS_ANNE_1F\",\"SS_ANNE_1F\",\"SS_ANNE_1F\",\"SS_ANNE_1F\",\"SS_ANNE_1F\",\"SS_ANNE_2F\",\"SS_ANNE_2F\",\"SS_ANNE_2F\",\"SS_ANNE_3F\",\"SS_ANNE_B1F\",\"UNDERGROUND_PATH_NORTH_SOUTH\",\"UNDERGROUND_PATH_NORTH_SOUTH\",\"UNDERGROUND_PATH_ROUTE_7\",\"UNDERGROUND_PATH_ROUTE_8\",\"VERMILION_CITY\",\"VERMILION_CITY\",\"VERMILION_CITY\",\"VERMILION_CITY\",\"VERMILION_CITY\",\"VERMILION_CITY\",\"VERMILION_CITY\",\"VERMILION_CITY\",\"VICTORY_ROAD_1F\",\"VICTORY_ROAD_2F\",\"VIRIDIAN_CITY\",\"VIRIDIAN_CITY\",\"VIRIDIAN_CITY\",\"VIRIDIAN_CITY\",\"VIRIDIAN_CITY\",\"VIRIDIAN_FOREST\",\"VIRIDIAN_FOREST\",\"CELADON_CITY\",\"CELADON_CITY\",\"CERULEAN_CITY\",\"CERULEAN_CITY\",\"CERULEAN_CITY\",\"CERULEAN_CITY\",\"CINNABAR_ISLAND\",\"CINNABAR_ISLAND\",\"FUCHSIA_CITY\",\"FUCHSIA_CITY\",\"FUCHSIA_CITY\",\"INDIGO_PLATEAU\",\"LAVENDER_TOWN\",\"LAVENDER_TOWN\",\"LAVENDER_TOWN\",\"PALLET_TOWN\",\"PALLET_TOWN\",\"PEWTER_CITY\",\"PEWTER_CITY\",\"ROUTE_1\",\"ROUTE_10\",\"ROUTE_11\",\"ROUTE_11\",\"ROUTE_12\",\"ROUTE_13\",\"ROUTE_14\",\"ROUTE_16\",\"ROUTE_17\",\"ROUTE_19\",\"ROUTE_2\",\"ROUTE_22\",\"ROUTE_22\",\"ROUTE_24\",\"ROUTE_3\",\"ROUTE_5\",\"ROUTE_6\",\"ROUTE_6\",\"ROUTE_7\",\"ROUTE_8\"],\"to\":[\"BRUNOS_ROOM\",\"LANCES_ROOM\",\"LORELEIS_ROOM\",\"CELADON_MART_1F\",\"CELADON_MANSION_1F\",\"CELADON_POKECENTER\",\"CELADON_GYM\",\"GAME_CORNER\",\"CELADON_MART_5F\",\"GAME_CORNER_PRIZE_ROOM\",\"CELADON_DINER\",\"CELADON_CHIEF_HOUSE\",\"CELADON_HOTEL\",\"CELADON_MANSION_2F\",\"CELADON_MANSION_3F\",\"CELADON_MANSION_ROOF\",\"CELADON_MANSION_ROOF_HOUSE\",\"CELADON_MART_2F\",\"CELADON_MART_ELEVATOR\",\"CELADON_MART_3F\",\"CELADON_MART_ELEVATOR\",\"CELADON_MART_4F\",\"CELADON_MART_ELEVATOR\",\"CELADON_MART_5F\",\"CELADON_MART_ELEVATOR\",\"CELADON_MART_ROOF\",\"CELADON_MART_ELEVATOR\",\"CERULEAN_CAVE_2F\",\"CERULEAN_CAVE_B1F\",\"CERULEAN_TRASHED_HOUSE\",\"CERULEAN_TRADE_HOUSE\",\"CERULEAN_POKECENTER\",\"CERULEAN_GYM\",\"BIKE_SHOP\",\"CERULEAN_MART\",\"CERULEAN_CAVE_1F\",\"CERULEAN_BADGE_HOUSE\",\"LANCES_ROOM\",\"HALL_OF_FAME\",\"POKEMON_MANSION_1F\",\"CINNABAR_GYM\",\"CINNABAR_LAB\",\"CINNABAR_POKECENTER\",\"CINNABAR_MART\",\"CINNABAR_LAB_TRADE_ROOM\",\"CINNABAR_LAB_METRONOME_ROOM\",\"CINNABAR_LAB_FOSSIL_ROOM\",\"COPYCATS_HOUSE_2F\",\"DIGLETTS_CAVE_ROUTE_2\",\"DIGLETTS_CAVE_ROUTE_11\",\"FUCHSIA_MART\",\"FUCHSIA_BILLS_GRANDPAS_HOUSE\",\"FUCHSIA_POKECENTER\",\"WARDENS_HOUSE\",\"SAFARI_ZONE_GATE\",\"FUCHSIA_GYM\",\"FUCHSIA_MEETING_ROOM\",\"FUCHSIA_GOOD_ROD_HOUSE\",\"ROCKET_HIDEOUT_B1F\",\"INDIGO_PLATEAU_LOBBY\",\"LORELEIS_ROOM\",\"LAVENDER_POKECENTER\",\"POKEMON_TOWER_1F\",\"MR_FUJIS_HOUSE\",\"LAVENDER_MART\",\"LAVENDER_CUBONE_HOUSE\",\"NAME_RATERS_HOUSE\",\"MT_MOON_B1F\",\"MT_MOON_B2F\",\"MUSEUM_2F\",\"REDS_HOUSE_1F\",\"BLUES_HOUSE\",\"OAKS_LAB\",\"MUSEUM_1F\",\"PEWTER_GYM\",\"PEWTER_NIDORAN_HOUSE\",\"PEWTER_MART\",\"PEWTER_SPEECH_HOUSE\",\"PEWTER_POKECENTER\",\"POKEMON_MANSION_2F\",\"POKEMON_MANSION_B1F\",\"POKEMON_MANSION_3F\",\"POKEMON_TOWER_2F\",\"POKEMON_TOWER_3F\",\"POKEMON_TOWER_4F\",\"POKEMON_TOWER_5F\",\"POKEMON_TOWER_6F\",\"POKEMON_TOWER_7F\",\"REDS_HOUSE_2F\",\"ROCKET_HIDEOUT_B2F\",\"ROCKET_HIDEOUT_ELEVATOR\",\"ROCKET_HIDEOUT_B3F\",\"ROCKET_HIDEOUT_ELEVATOR\",\"ROCKET_HIDEOUT_B4F\",\"ROCKET_HIDEOUT_ELEVATOR\",\"ROCK_TUNNEL_B1F\",\"ROCK_TUNNEL_POKECENTER\",\"ROCK_TUNNEL_1F\",\"POWER_PLANT\",\"ROUTE_11_GATE_1F\",\"DIGLETTS_CAVE_ROUTE_11\",\"ROUTE_11_GATE_2F\",\"ROUTE_12_GATE_1F\",\"ROUTE_12_SUPER_ROD_HOUSE\",\"ROUTE_12_GATE_2F\",\"ROUTE_15_GATE_1F\",\"ROUTE_15_GATE_2F\",\"ROUTE_16_GATE_1F\",\"ROUTE_16_FLY_HOUSE\",\"ROUTE_16_GATE_2F\",\"ROUTE_18_GATE_1F\",\"ROUTE_18_GATE_2F\",\"DIGLETTS_CAVE_ROUTE_2\",\"VIRIDIAN_FOREST_NORTH_GATE\",\"ROUTE_2_TRADE_HOUSE\",\"ROUTE_2_GATE\",\"VIRIDIAN_FOREST_SOUTH_GATE\",\"SEAFOAM_ISLANDS_1F\",\"ROUTE_22_GATE\",\"ROUTE_22_GATE\",\"VICTORY_ROAD_1F\",\"VICTORY_ROAD_2F\",\"BILLS_HOUSE\",\"MT_MOON_POKECENTER\",\"MT_MOON_1F\",\"MT_MOON_B1F\",\"ROUTE_5_GATE\",\"UNDERGROUND_PATH_ROUTE_5\",\"DAYCARE\",\"ROUTE_6_GATE\",\"UNDERGROUND_PATH_ROUTE_6\",\"ROUTE_7_GATE\",\"UNDERGROUND_PATH_ROUTE_7\",\"ROUTE_8_GATE\",\"UNDERGROUND_PATH_ROUTE_8\",\"SAFARI_ZONE_GATE\",\"SAFARI_ZONE_WEST\",\"SAFARI_ZONE_NORTH\",\"SAFARI_ZONE_EAST\",\"SAFARI_ZONE_CENTER_REST_HOUSE\",\"SAFARI_ZONE_NORTH\",\"SAFARI_ZONE_EAST_REST_HOUSE\",\"SAFARI_ZONE_WEST\",\"SAFARI_ZONE_NORTH_REST_HOUSE\",\"SAFARI_ZONE_WEST\",\"SAFARI_ZONE_WEST_REST_HOUSE\",\"COPYCATS_HOUSE_1F\",\"FIGHTING_DOJO\",\"SAFFRON_GYM\",\"SAFFRON_PIDGEY_HOUSE\",\"SAFFRON_MART\",\"SILPH_CO_1F\",\"SAFFRON_POKECENTER\",\"MR_PSYCHICS_HOUSE\",\"SAFFRON_GYM\",\"SEAFOAM_ISLANDS_B1F\",\"SEAFOAM_ISLANDS_B2F\",\"SEAFOAM_ISLANDS_B3F\",\"SEAFOAM_ISLANDS_B4F\",\"SILPH_CO_9F\",\"SILPH_CO_11F\",\"SILPH_CO_ELEVATOR\",\"SILPH_CO_4F\",\"SILPH_CO_ELEVATOR\",\"SILPH_CO_7F\",\"SILPH_CO_2F\",\"SILPH_CO_ELEVATOR\",\"SILPH_CO_3F\",\"SILPH_CO_3F\",\"SILPH_CO_ELEVATOR\",\"SILPH_CO_8F\",\"SILPH_CO_6F\",\"SILPH_CO_4F\",\"SILPH_CO_ELEVATOR\",\"SILPH_CO_3F\",\"SILPH_CO_5F\",\"SILPH_CO_9F\",\"SILPH_CO_7F\",\"SILPH_CO_5F\",\"SILPH_CO_ELEVATOR\",\"SILPH_CO_6F\",\"SILPH_CO_6F\",\"SILPH_CO_ELEVATOR\",\"SILPH_CO_7F\",\"SILPH_CO_9F\",\"SILPH_CO_7F\",\"SILPH_CO_ELEVATOR\",\"SILPH_CO_8F\",\"SILPH_CO_ELEVATOR\",\"SILPH_CO_9F\",\"SILPH_CO_ELEVATOR\",\"SILPH_CO_8F\",\"SILPH_CO_ELEVATOR\",\"UNUSED_MAP_ED\",\"VERMILION_DOCK\",\"SS_ANNE_1F_ROOMS\",\"SS_ANNE_2F\",\"SS_ANNE_B1F\",\"SS_ANNE_KITCHEN\",\"SS_ANNE_2F_ROOMS\",\"SS_ANNE_3F\",\"SS_ANNE_CAPTAINS_ROOM\",\"SS_ANNE_BOW\",\"SS_ANNE_B1F_ROOMS\",\"UNDERGROUND_PATH_ROUTE_5\",\"UNDERGROUND_PATH_ROUTE_6\",\"UNDERGROUND_PATH_WEST_EAST\",\"UNDERGROUND_PATH_WEST_EAST\",\"VERMILION_POKECENTER\",\"POKEMON_FAN_CLUB\",\"VERMILION_MART\",\"VERMILION_GYM\",\"VERMILION_PIDGEY_HOUSE\",\"VERMILION_DOCK\",\"VERMILION_TRADE_HOUSE\",\"VERMILION_OLD_ROD_HOUSE\",\"VICTORY_ROAD_2F\",\"VICTORY_ROAD_3F\",\"VIRIDIAN_POKECENTER\",\"VIRIDIAN_MART\",\"VIRIDIAN_SCHOOL_HOUSE\",\"VIRIDIAN_NICKNAME_HOUSE\",\"VIRIDIAN_GYM\",\"VIRIDIAN_FOREST_NORTH_GATE\",\"VIRIDIAN_FOREST_SOUTH_GATE\",\"ROUTE_16\",\"ROUTE_7\",\"ROUTE_24\",\"ROUTE_5\",\"ROUTE_4\",\"ROUTE_9\",\"ROUTE_21\",\"ROUTE_20\",\"ROUTE_19\",\"ROUTE_18\",\"ROUTE_15\",\"ROUTE_23\",\"ROUTE_10\",\"ROUTE_12\",\"ROUTE_8\",\"ROUTE_1\",\"ROUTE_21\",\"ROUTE_2\",\"ROUTE_3\",\"VIRIDIAN_CITY\",\"ROUTE_9\",\"VERMILION_CITY\",\"ROUTE_12\",\"ROUTE_13\",\"ROUTE_14\",\"ROUTE_15\",\"ROUTE_17\",\"ROUTE_18\",\"ROUTE_20\",\"VIRIDIAN_CITY\",\"ROUTE_23\",\"VIRIDIAN_CITY\",\"ROUTE_25\",\"ROUTE_4\",\"SAFFRON_CITY\",\"SAFFRON_CITY\",\"VERMILION_CITY\",\"SAFFRON_CITY\",\"SAFFRON_CITY\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"borderWidth\":0,\"borderWidthSelected\":3,\"color\":\"#FF7777\",\"font\":{\"face\":\"pokemon-font\",\"size\":14}},\"manipulation\":{\"enabled\":false},\"edges\":{\"width\":3,\"selectionWidth\":5,\"color\":{\"color\":\"#FF7777\",\"highlight\":\"red\",\"opacity\":0.5}},\"layout\":{\"randomSeed\":150},\"physics\":{\"solver\":\"barnesHut\",\"barnesHut\":{\"springConstant\":0.1,\"gravitationalConstant\":-10000}}},\"groups\":null,\"width\":\"100%\",\"height\":\"600px\",\"idselection\":{\"enabled\":true,\"style\":\"font-family:pokemon-font,sans-serif;font-size:16px;color:red;\",\"useLabels\":true,\"main\":\"Select a location\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":{\"text\":\"Kanto\",\"style\":\"font-family:pokemon-font,sans-serif;font-size:30px;color:black;\"},\"submain\":{\"text\":\"A graph of locations in PKMN Red<br><br>\",\"style\":\"font-family:pokemon-font,sans-serif;font-size:16px;color:black;\"},\"footer\":{\"text\":\"Source: Nintendo and Game Freak via the pret/pokered dissassembly project\",\"style\":\"font-family:pokemon-font,sans-serif;font-size:8px;color:black;\"},\"background\":\"rgba(0, 0, 0, 0)\",\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n<br>\nIt can take a moment to load. You can select a node from the dropdown menu, scroll to zoom, and click on the nodes and edges themselves. The node labels will appear when you zoom in.\n\nIt's interesting to see the simple radial networks around each city; the spaghetti and meatballs of Silph Co caused by all the warp tiles (also note [its unused location](https://tcrf.net/Pok%C3%A9mon_Red_and_Blue/Unused_Maps)); the long 'tail' from Victory Road through the Elite Four to the Hall of Fame; and the hand-like structure of the Safari Zone.\n\nOf course, you could spend all day tweaking things like the physics of the relationship between each node, or you could replace each node an images of its in-game sprite. I've chosen to keep things relatively simple because it's bed time and I need to go and [count some Mareep](https://bulbapedia.bulbagarden.net/wiki/Mareep_(Pok%C3%A9mon)).\n\n<div class=\"tip\"> \n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 512 512\" style=\"height:1em;width:1em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm0-384c13.3 0 24 10.7 24 24V264c0 13.3-10.7 24-24 24s-24-10.7-24-24V152c0-13.3 10.7-24 24-24zM224 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/></svg>`{=html} <b>Note</b>\n\nCoincidentally, a few days after posting this, someone posted to [Hacker News](https://news.ycombinator.com/item?id=38462318) a non-R [implementation by Peter Hajas](http://peterhajas.com/blog/pokemon_rb_connections.html) from a few years ago. I should've guessed!\n\n</div>\n\n## Environment {.appendix}\n\n<details><summary>Session info</summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast rendered: 2023-12-01 23:09:13 GMT\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] visNetwork_2.1.2\n\nloaded via a namespace (and not attached):\n [1] digest_0.6.33     fastmap_1.1.1     xfun_0.41         fontawesome_0.5.2\n [5] magrittr_2.0.3    knitr_1.45        htmltools_0.5.6.1 rmarkdown_2.25   \n [9] cli_3.6.1         compiler_4.3.1    rstudioapi_0.15.0 tools_4.3.1      \n[13] evaluate_0.23     ellipsis_0.3.2    yaml_2.3.7        rlang_1.1.2      \n[17] jsonlite_1.8.7    htmlwidgets_1.6.2\n```\n:::\n:::\n\n</details>\n\n[^ideas]: Oh no! He's running out of ideas!\n[^blue]: As a diehard Blue-version enjoyer, it pains me slightly that this is the Red version. Red is the bad guy! Blue is the good guy!\n[^passion]: Graphic design is my passion, etc. As a colourblind person, I'm just glad they didn't release Red and Green versions simultaneously.\n[^mew]: Not to mention that you can mess about with modding the game, like adjusting the code to [set Mew as one of the starter 'mons](https://www.youtube.com/watch?v=f5R8mcmlbFQ).\n[^font]: I can't actually remember where I got this exact font file from, but I know it's available from [free font sites](https://www.fontspace.com/pokemon-gb-font-f9621).\n[^so]: This wrangling was actually mildly trickier than I thought it was be and so [I 'borrowed' from StackOverflow](https://stackoverflow.com/a/50117582) to save time.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/vis-9.1.0/vis-network.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/vis-9.1.0/vis-network.min.js\"></script>\n<script src=\"../../site_libs/visNetwork-binding-2.1.2/visNetwork.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}