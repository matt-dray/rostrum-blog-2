{
  "hash": "5c398fd0f1c9860b5e3779139a3f4569",
  "result": {
    "markdown": "---\ntitle: Base slaps!\ndate: 2023-10-17\nslug: nhs-r-2023\ncategories:\n  - base\n  - public-sector\n  - r\n---\n\n\n## tl;dr\n\nI'm giving [a quick talk](https://matt-dray.github.io/nhs-r-2023/) at the NHS-R Conference 2023 about base R. I think there'll be a video; I'll link to it here when it's released.\n\n## Slides\n\nThe slides are embedded below. Click on them and press <kbd>→</kbd> to advance, <kbd>F</kbd> to go fullscreen, and <kbd>S</kbd> to pop-out the speaker notes.\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"shareagain\" style=\"min-width:300px;margin:1em auto;\" data-exeternal=\"1\">\n<iframe src=\"https://matt-dray.github.io/nhs-r-2023/\" width=\"1600\" height=\"900\" style=\"border:2px solid currentColor;\" loading=\"lazy\" allowfullscreen></iframe>\n<script>fitvids('.shareagain', {players: 'iframe'});</script>\n</div>\n```\n:::\n:::\n\n\nThe source is [on GitHub](https://github.com/matt-dray/nhs-r-2023). The slides are [written with Quarto](https://quarto.org/docs/presentations/), of course.\n\n## Premise\n\nThe content of the talk is neither new nor earth-shattering. The basic premise is 'base R is pretty neat, remember it exists'.\n\nI have a narrow window of experience. I work in the public sector, mostly with people who publish statistical reports. The default for this purpose is often the tidyverse. That's fine, for many reasons.\n\nBut—in my opinion, with my limited experience—people default to using `library(tidyverse)` without a second thought. At best, this may be overkill for small projects, at worst, reproducibility may be jeopardised.\n\nThe bottom line: consider if base R can do it alone. It might not, but maybe you can think about it. If it helps (it absolutely won't), you can imagine me standing over your shoulder, stroking my beard, every time you do `library(tidyverse)`.\n\nBut to be clear: I don't think you should 'just replace all your code with base R code'. There's very few examples of where that would make sense. But is it worth importing all of {dplyr} if you just want to `select()`, `filter()` and `mutate()` a data.frame?\n\n## Content\n\nThe talk mentions three things:\n\n1. Stability: vanilla R has changed little over time and will (likely) continue to run for a long time into the future[^julia].\n2. Dependency: R's extensibility is one of its greatest strengths, but simplifying dependencies could help improve the reproducibility of your work.\n3. Modernity: high stability hasn't stopped base R from adapting to the expectation of a modern R coder (e.g. inclusion of a base pipe operator).\n\nRe stability, I contend that R is a horseshoe crab. And that R users are Milhouse (you know this to be true).\n\n![](resources/nice-doggie.gif){fig-alt=\"Milhouse from the Simpsons pats a happy horseshoe crab on the head. Milhouse is not wearig his glasses. He thinks the crab is a dog.\" width=\"50%\"}\n\nRe dependency, I use an obligatory (adapted) xkcd.\n\n![](resources/xkcd.png){fig-alt=\"Comic from xkcd. Lots of blocks are stacked on top of each other. One small block near the bottom is indicated. The implication is that removing the one small block will bring the whole thing down. The stack is labelled 'your project', the small block is labelled 'some dependency' and the big stable blocks underneath it at the bottom are labelled 'base'.\" width=\"50%\"}\n\nRe modernity, I morph the janky old R logo to the (perhaps already-outdated, lol) contemporary 'flat' design of the new logo.\n\n![](resources/logo.gif){fig-alt=\"The old R logo morphs into the new R logo. The old has bevels, highlights and shadows. The new one is simpler with peak 'flat' design.\" width=\"25%\"}\n\n## Bonus\n\nAnd, as a bonus fourth point raised in the talk:\n\n4. 'Oddity': base R has some hidden-gem functions like `locator()` to click a plot and have coordinates returned (e.g. [my experimental {pixeltrix} package](https://github.com/matt-dray/pixeltrix) for interactive pixel art), `readline()` to accept user input interactively (e.g. [my experimental {r.oguelike} package](https://github.com/matt-dray/r.oguelike) for a 'procedural dungeon-crawler' in the R console), and `R-user-dir()` as a location for storing user data (e.g. [my experimental {tamRgo} package](https://github.com/matt-dray/tamRgo) for a persistent cyber pet in the R console).\n\nBut ultimately, I just wanted to do this terrible 'base slaps' pun because like, slap bass is a guitar technique and, like, zoomers say something 'slaps' to mean 'cool'. I think. Oh dear, this was a flimsy premise for a talk. Cringe-driven development?\n\n## Environment {.appendix}\n\n<details><summary>Session info</summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast rendered: 2023-10-11 22:35:26 CEST\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Rome\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2   compiler_4.3.1      fastmap_1.1.1      \n [4] cli_3.6.1           tools_4.3.1         htmltools_0.5.6.1  \n [7] xaringanExtra_0.7.0 rstudioapi_0.15.0   yaml_2.3.7         \n[10] rmarkdown_2.25      knitr_1.44          jsonlite_1.8.7     \n[13] xfun_0.40           digest_0.6.33       rlang_1.1.1        \n[16] evaluate_0.22      \n```\n:::\n:::\n\n</details>\n\n[^julia]: Until we all switch to the Julia and/or Rust languages, amirite.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/fitvids-2.1.1/fitvids.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}