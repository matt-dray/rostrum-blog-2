{
  "hash": "45278dc8c4a41a213f0484cf531e0657",
  "result": {
    "markdown": "---\ntitle: Ninja scaffolding for {xaringan}\ndate: 2020-03-22\nslug: ninja-scaffold\ncategories:\n  - css\n  - kunoichi\n  - ninjutsu\n  - r\n  - rmarkdown\n  - xaringan\n---\n\n\n\n\n![Example of modified Ninjutsu for 'scaffolding' a {xaringan} slide.](resources/split-main2.png){fig-alt=\"A slide split into four sections, with a title row, footer row and two main-body rows, the lower of which is split in two vertically.\" width=\"NA\"}\n\n## tl;dr \n\n[Emi Tanaka's Ninjutsu](https://emitanaka.org/ninja-theme/themes/kunoichi/kunoichi-theme-example.html#6) CSS for [{xaringan}](https://slides.yihui.org/xaringan/#1) breaks slides into 'cells', which are useful for arranging plots, tables, etc. [I've been experimenting](https://matt-dray.github.io/ninja-scaffold/) with Emi's CSS to create my own layouts.\n\n## Slide themes\n\nThe [{xaringan}](https://slides.yihui.org/xaringan/#1) package by [Yihui Xie](https://yihui.org/) -- an implementation of [remark.js](https://github.com/gnab/remark) -- lets you create reproducible slides with R.\n\nYou can create your own themes for {xaringan} by supplying some [CSS](https://simple.wikipedia.org/wiki/Cascading_Style_Sheets). Yihui has [encouraged users](https://yihui.org/en/2017/10/xaringan-themes/) to add their themes to the package itself.\n\nTip: if you don't know CSS, [Garrick Aden-Buie](https://www.garrickadenbuie.com/)'s [{xaringanthemer}](https://www.garrickadenbuie.com/project/xaringanthemer/) package lets you write R code and will generate the corresponding CSS for you.\n\n## Slide layouts\n\nI was given a brief to create slides with a particular layout of page elements (plots, tables, text). How could I create a 'scaffold' in {xaringan} into which I could place the page elements?\n\nFortunately, [Emi Tanaka](https://twitter.com/statsgen)[^emitanaka] created [Ninjutsu](https://emitanaka.org/ninja-theme/themes/kunoichi/kunoichi-theme-example.html#7)[^ninjutsu]: CSS classes for splitting your page into columns and rows. This is now built into {xaringan} along with [her Kunoichi theme](https://emitanaka.org/ninja-theme/themes/kunoichi/kunoichi-theme-example.html#1)[^kunoichi].\n\nFor example, the `split-1-2-1` class from Ninjutsu splits the slide into three columns that are 25%, 50% and 25% of the total page width (hence '1-2-1').\n\n\n::: {.cell}\n\n```{.css .cell-code}\n.split-1-2-1>.column:first-of-type {\n  width: 25%; height: 100%; position: absolute; top: 0; left: 0; \n}\n.split-1-2-1>.column:nth-of-type(2) {\n  width: 50%; height: 100%; position: absolute; top: 0; left: 25%;\n}\n.split-1-2-1>.column:nth-of-type(3) {\n  width: 25%; height: 100%; position: absolute; top: 0; right: 0;\n}\n```\n:::\n\n\nThere's one line of CSS for each of the three columns that the slide will be split into. In this example, the first column (`first-of-type`) starts from the extreme left (`left: 0;`), the middle column (`nth-of-type(2)`) starts where the first one ends (`left: 25%;`) and the third one (`nth-of-type(3)`) starts from the extreme right (`right: 0;`).\n\n## Demo: ninja scaffold\n\nI adapted Emi's CSS to create the layouts I wanted. You can:\n\n* [find the source on GitHub](https://github.com/matt-dray/ninja-scaffold)\n* [inspect the relevant custom CSS](https://github.com/matt-dray/ninja-scaffold/blob/master/custom.css)\n* [see a demo slideshow](https://matt-dray.github.io/ninja-scaffold/), or view it embedded below\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"shareagain\" style=\"min-width:300px;margin:1em auto;\" data-exeternal=\"1\">\n<iframe src=\"https://matt-dray.github.io/ninja-scaffold/\" width=\"1600\" height=\"900\" style=\"border:2px solid currentColor;\" loading=\"lazy\" allowfullscreen></iframe>\n<script>fitvids('.shareagain', {players: 'iframe'});</script>\n</div>\n```\n:::\n:::\n\n\nRead the rest of this post for an explanation of how I did it.\n\n## Adapting the layout\n\nSpecifically, I wanted to define title, body and footer-bar sections for:\n\n* a title page\n* a main, generic content page\n* a content page that could show a table and plot next to each other, with a wider table underneath\n\nThis means I could colour them and/or fill them with content according to some additional CSS formatting.\n\nTo do this, I tweaked Emi's `split-1-2-1` class to create classes with rows (rather than columns) split into the sections I wanted.\n\nBelow are some simplified examples of what I did. You can [see the original CSS in the source code](https://github.com/matt-dray/ninja-scaffold/blob/master/custom.css) of the demo I've put on GitHub.\n\n### Defining the classes\n\nThe title page has two rows, one is a large header area to hold a logo and the other is where the talk metadata goes ([see demo](https://matt-dray.github.io/ninja-scaffold/#5)):\n\n\n::: {.cell}\n\n```{.css .cell-code}\n.split-title>.row:first-of-type {\n  height: 35%; width: 100%; position: absolute; top: 0; left: 0;\n}\n.split-title>.row:nth-of-type(2) {\n  height: 65%; width: 100%; position: absolute; left: 0; top: 35%;\n}\n```\n:::\n\n\nThe main slide class has a title and footer section and the content goes in the large section between ([see demo](https://matt-dray.github.io/ninja-scaffold/#6)):\n\n\n::: {.cell}\n\n```{.css .cell-code}\n.split-main1>.row:first-of-type {\n  height: 15%; width: 100%; position: absolute; top: 0; left: 0;\n}\n.split-main1>.row:nth-of-type(2) {\n  height: 80%; width: 100%; position: absolute; left: 0; bottom: 5%;\n}\n.split-main1>.row:nth-of-type(3) {\n  height: 5%; width: 100%; position: absolute; bottom: 0; left: 0;\n}\n```\n:::\n\n\nI modified slightly this class so the large blank area is split once more ([see demo](https://matt-dray.github.io/ninja-scaffold/#7)):\n\n\n::: {.cell}\n\n```{.css .cell-code}\n.split-main2>.row:first-of-type { \n  height: 15%; width: 100%; position: absolute; top: 0; left: 0;\n}\n.split-main2>.row:nth-of-type(2) { \n  height: 40%; width: 100%; position: absolute; left: 0; top: 15%;\n}\n.split-main2>.row:nth-of-type(3) { \n  height: 40%; width: 100%; position: absolute; left: 0; bottom: 5%;\n}\n.split-main2>.row:nth-of-type(4) { \n  height: 5%; width: 100%; position: absolute; bottom: 0; left: 0;\n}\n```\n:::\n\n\n### Using the classes\n\nHaving defined the CSS, how do we use it?\n\nLet's say I'd saved this CSS into a file called `custom.CSS`, along with some font specifications in `custom-fonts.CSS`. Here's a simplified YAML header showing how to declare these CSS files in your {xaringan} .Rmd file:\n\n```\n---\ntitle: \"Example Title\"\noutput:\n  xaringan::moon_reader:\n    css: [default, ninjutsu, custom.css, custom-fonts.css]\n---\n```\n\nThe CSS files are listed in this order so that the later-listed files take precedence if there's any clashes. Remember also that in-built themes don't need the `.css` file extension, but you need to provide the full path for any custom CSS.\n\nWith {xaringan} you name the class at the top of a slide to actually apply it, where slides are defined by three hyphens `---`.\n\nYou can [see an example in the source code](https://github.com/matt-dray/ninja-scaffold/blob/master/index.Rmd) of the demo I put on GitHub.\n\n#### Class `split-main1`\n\nSo, the `split-main1` could be used like this:\n\n```\n---\nclass: split-main1\n\n.row[.content[\nThis Is A Title\n]]\n\n.row[.content[\nThis is the main body area of the slide.\n]]\n```\n\nRemember that the `split-main1` class is split into three separate rows for the title, main body and footer sections. We can define what's in each row with `.row[]` and then define the content inside a call to `.content[]`. \n\nThe first `.row[]` call will take the style from `.split-main1>.row:first-of-type` in our CSS, the second will take the CSS information from `.split-main1>.row:nth-of-type(2)`, and so on.\n\nNote that Ninjutsu also lets you adjust the content of classes by chaining calls like `.content.vmiddle[]`, which will make the content vertically centred in this case.\n\n#### Class `split-main2`\n\nThe `split-main2` class has an additional `.row[]` to define because the main body area is composed of two rows rather than one. \n\nHere I've added a `split-two[]` call inside the second `.row[]` call and declared `.column[]` twice within it. This results the main body area containing one row the width of the page and one row split into two columns ([see demo](https://matt-dray.github.io/ninja-scaffold/#8)).\n\n```\n---\nclass: split-main2\n\n.row[.content[\nThis Is A Title\n]]\n\n.row[.content[\nThis is the second row of the page. It's full-width.\n]]\n\n.row[.content[\n.split-two[\n.column[.content[\nThis is the third row, which is split in two. This is the left column.\n]]\n.column[.content[\nThis is the right-hand column of the third row.\n]]\n]\n]]\n\n.row[\n]\n```\n\n## What now?\n\nI think there's a lot of promise in this approach for making bespoke page layouts.\n\nI've already used this approach at work to design a {xaringan} template to a specification, which I used to help automate the generation of a large number of reports. In particular, I used the `split-main2` class to arrange a small table in the top-left, a plot in the top-right, and a full-width wide table below them.\n\nIt's possible to create these kinds of layouts in other ways -- [like in {pagedown}](https://github.com/mattkerlogue/pagedown-test) or with [fancier CSS](https://www.w3schools.com/css/css_grid.asp) skills. For now I'm most comfortable with {xaringan} and the features it offers, like presenter notes and presenter view. But this is probably less important if your goal is [to output to PDF](https://www.rostrum.blog/2020/03/12/knit-with-params/#demo-ninja-knitting).\n\nI look forward to seeing how Ninjutsu and other {xaringan} themes develop to help with page layouts for reproducible presentations.\n\n## Environment {.appendix}\n\n<details><summary>Session info</summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast rendered: 2023-07-22 15:54:05 BST\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2   compiler_4.3.1      fastmap_1.1.1      \n [4] cli_3.6.1           tools_4.3.1         htmltools_0.5.5    \n [7] xaringanExtra_0.7.0 rstudioapi_0.15.0   yaml_2.3.7         \n[10] rmarkdown_2.23      knitr_1.43.1        jsonlite_1.8.7     \n[13] xfun_0.39           digest_0.6.33       rlang_1.1.1        \n[16] evaluate_0.21      \n```\n:::\n:::\n\n</details>\n\n[^emitanaka]: A certified [great hacker](https://pagedown.rbind.io/html-letter).\n[^kunoichi]: [Wikipedia](https://en.wikipedia.org/wiki/Kunoichi): 'a female ninja or practitioner of ninjutsu'.\n[^ninjutsu]: [Wikipedia](https://en.wikipedia.org/wiki/Ninjutsu): 'the strategy and tactics of unconventional warfare, guerrilla warfare and espionage purportedly practiced by the ninja'.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/fitvids-2.1.1/fitvids.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}