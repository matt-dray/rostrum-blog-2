{
  "hash": "d590ed8f17776a5c78d08075a3c5dc15",
  "result": {
    "markdown": "---\ntitle: Pokéballs in Super Smash Bros\ndate: 2018-05-19\nslug: pokeballs-in-super-smash-bros\ncategories:\n  - r\n  - videogames\n---\n\n\n![My special edition Nintendo 64 playing Super Smash Bros.](resources/n64.JPG){fig-alt=\"A Nintendo 64 console with the Super Msash Bros cartridge plugged in. The console is a Pokémon Stadium special edition. The upper half is blue, the bottom yellow. The Pokémon logo is on the left on the top of the console and several 3D renderings of Pokémon on the right.\" width=\"100%\"}\n\n## tl;dr\n\nPokémon emerge at different rates from the pokéball item in Super Smash Bros (N64). Also [{Rokemon}](https://github.com/schochastics/Rokemon) can make fun Pokémon-themed plots.\n\n## Smash!\n\n[Super Smash Bros](https://en.wikipedia.org/wiki/Super_Smash_Bros.) (SSB) is a series of beat 'em up videogames featuring characters from various Nintendo franchises and beyond. The twist is that your health doesn't deplete; instead you build damage so that subsequent hits knock you back further.\n\nThe series first featured on Nintendo 64 ([Super Smash Bros, 1998](https://en.wikipedia.org/wiki/Super_Smash_Bros._(video_game))).\n\nYou can fight characters directly but you can also make use of items and weapons from games across the Nintendo universe, such as the mushroom ([the Super Mario series](https://en.wikipedia.org/wiki/Super_Mario)), the heart container ([Zelda](https://en.wikipedia.org/wiki/The_Legend_of_Zelda)) and the home run bat ([EarthBound](https://en.wikipedia.org/wiki/EarthBound)).\n\nOne of the more interesting items in SSB is the pokéball. This item is used in [the Pokémon series of games](https://en.wikipedia.org/wiki/Pok%C3%A9mon_(video_game_series)) to capture and store Pokémon. When a player picks up and throws a pokéball in SSB, it opens to release 1 of a possible 13 Pokémon. [The SSB wiki](https://www.ssbwiki.com/Pok%C3%A9_Ball) says that all of them are 'common', except for 'uncommon' Snorlax and 'rare' Mew (apparently only once every 151 releases, which is related to the number of Pokémon in the original game).\n\nSo how frequently in practice does each Pokémon emerge from a pokéball in SSB on N64?\n\nThis is a short post to sate my curiosity. I've used R code throughout. The post will update as I gather more data.\n\n## Data\n\nI'm a recovering ecologist, so data collection by observation is very important to me. I watched four computer-controlled players face-off in versus mode (it's a weekend and I'm old enough to do whatever I want (after I've done my chores)). Pokéballs were the only items set to 'on' and frequency was set to 'very high'. I saved the file as [a CSV on GitHub](https://github.com/matt-dray/draytasets/blob/master/ssb_pokeballs.csv).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(readr)\n\ncsv_path <-\n  \"https://raw.githubusercontent.com/matt-dray/draytasets/master/ssb_pokeballs.csv\"\n\nballs <- read_csv(csv_path, show_col_types = FALSE) %>% \n  mutate(pokemon = tools::toTitleCase(pokemon))\n\nballs %>% sample_n(25) %>% pull()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Hitmonlee\" \"Hitmonlee\" \"Chansey\"   \"Beedrill\"  \"Charizard\" \"Chansey\"  \n [7] \"Beedrill\"  \"Koffing\"   \"Hitmonlee\" \"Hitmonlee\" \"Starmie\"   \"Beedrill\" \n[13] \"Onix\"      \"Chansey\"   \"Snorlax\"   \"Clefairy\"  \"Blastoise\" \"Starmie\"  \n[19] \"Charizard\" \"Snorlax\"   \"Charizard\" \"Koffing\"   \"Clefairy\"  \"Starmie\"  \n[25] \"Snorlax\"  \n```\n:::\n:::\n\n\n## Frequencies\n\nLet's take a look at some very basic presentation of the data.\n\nFirst, We can make use of the `tabyl()` function from the {janitor} package to get the count and percentage of each Pokémon.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor, warn.conflicts = FALSE)\n\nballs_summary <- balls %>%\n  tabyl(pokemon) %>% \n  arrange(desc(n)) %>% \n  mutate(Percent = round(percent * 100, 1)) %>% \n  select(Pokemon = pokemon, Count = n, Percent)\n  \nknitr::kable(balls_summary)\n```\n\n::: {.cell-output-display}\n|Pokemon   | Count| Percent|\n|:---------|-----:|-------:|\n|Beedrill  |    26|     9.0|\n|Chansey   |    26|     9.0|\n|Goldeen   |    26|     9.0|\n|Snorlax   |    26|     9.0|\n|Blastoise |    25|     8.6|\n|Hitmonlee |    25|     8.6|\n|Onix      |    25|     8.6|\n|Koffing   |    24|     8.3|\n|Charizard |    23|     7.9|\n|Starmie   |    23|     7.9|\n|Meowth    |    20|     6.9|\n|Clefairy  |    18|     6.2|\n|Mew       |     3|     1.0|\n:::\n:::\n\n\nOf course we can plot these data a well. It seems fitting to have a Pokémon theme, so we can use the `gghealth()` function from [the {Rokemon} package by David Schoch](https://github.com/schochastics/Rokemon). This creates a bar chart where the bars look like the health point (HP) meter from the original Pokémon games on the Nintendo Game Boy.[^2]\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(Rokemon)  # remotes::install_github(\"schochastics/Rokemon\")\n```\n:::\n\n\n{Rokemon} has a function that imports the Pokémon font to use in its plots. Run `import_pokefont()` to install the pokemon-font.ttf font file to your machine. The path will be printed in your console. I'm running macOS, so I can copy this file into Font Book to make it available for use.\n\nAnd now we can plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nballs %>% \n  count(pokemon) %>% \n  gghealth(\"pokemon\", \"n\") +\n  labs(\n    x = \"\", \n    y = \"Count\",\n    title = \"Pokeball release frequencies\",\n    subtitle = \"Super Smash Bros on Nintendo 64\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-1.png){fig-alt='Bar plot of the number of appearances by Pokémon from the pokéball item in Super Smash Bros for the N64. Snorlax, Goldeen Chansey and Beedrill are most common. Mew is least common. The chart is themed with elements from the original Pokémon game on the Game Boy, including health bars and font.' width=672}\n:::\n:::\n\n\n## Revelation\n\nSo it looks like the 'common' Pokémon according to [the SSB wiki](https://www.ssbwiki.com/Pok%C3%A9_Ball) are indeed more common, though Snorlax appears equal first on this list, despite being labelled as 'uncommon'. Clefairy also appeared less than expected, given it was labelled as 'common'.\n\nMew appeared 3 times out of 290, which is once every 96.7 releases; less than the once every 151 releases I mentioned above.\n\nBear in mind that this is only based on a sample of 290 so far. I might collect more data at a later point.\n\nI hope this inside information will help you win your next Smash tournament. You are welcome.\n\n## Environment {.appendix}\n\n<details><summary>Session info</summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast rendered: 2023-08-09 09:28:16 BST\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] Rokemon_0.0.1 ggplot2_3.4.2 janitor_2.2.0 readr_2.1.4   dplyr_1.1.2  \n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.3        generics_0.1.3    tidyr_1.3.0       stringi_1.7.12   \n [5] extrafontdb_1.0   hms_1.1.3         digest_0.6.33     magrittr_2.0.3   \n [9] evaluate_0.21     grid_4.3.1        timechange_0.2.0  fastmap_1.1.1    \n[13] jsonlite_1.8.7    purrr_1.0.1       fansi_1.0.4       scales_1.2.1     \n[17] cli_3.6.1         rlang_1.1.1       crayon_1.5.2      bit64_4.0.5      \n[21] munsell_0.5.0     withr_2.5.0       yaml_2.3.7        tools_4.3.1      \n[25] parallel_4.3.1    tzdb_0.4.0        colorspace_2.1-0  curl_5.0.1       \n[29] vctrs_0.6.3       R6_2.5.1          lifecycle_1.0.3   lubridate_1.9.2  \n[33] snakecase_0.11.0  stringr_1.5.0     htmlwidgets_1.6.2 bit_4.0.5        \n[37] vroom_1.6.3       pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.3     \n[41] glue_1.6.2        xfun_0.39         tibble_3.2.1      tidyselect_1.2.0 \n[45] rstudioapi_0.15.0 knitr_1.43.1      farver_2.1.1      extrafont_0.19   \n[49] htmltools_0.5.5   labeling_0.4.2    rmarkdown_2.23    Rttf2pt1_1.3.12  \n[53] compiler_4.3.1   \n```\n:::\n:::\n\n</details>\n\n[^2]: Also check out the `geom_pokemon()` function in the `ggimage` package by [Guangchuang Yu](https://guangchuangyu.github.io/), which [plots points as Pokémon sprites](https://cran.r-project.org/web/packages/ggimage/vignettes/ggimage.html).\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}