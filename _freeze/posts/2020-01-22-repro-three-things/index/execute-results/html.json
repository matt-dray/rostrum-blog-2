{
  "hash": "769b38bfa67360a08f2857acd8097a88",
  "result": {
    "markdown": "---\ntitle: 'Reproducibility in R: three things'\ndate: 2020-01-22\nslug: repro-three-things\ncategories:\n  - drake\n  - r\n  - rap\n  - reproducibility\n  - rmarkdown\n---\n\n\n![](resources/trex.gif){fig-alt=\"A T rex in sunglasses with the text 'works on my machine'.\" width=\"100%\"}\n\n## tl;dr\n\nThree tips for reproducibility in R: centralise everything; report with code; manage your workflows.\n\n## Reproducevangelism\n\nI spoke at the [Department for Education](https://www.gov.uk/government/organisations/department-for-education)'s Data Science Week. I wanted everyone -- newer and more experienced users alike -- to learn at least one new thing about reproduciblity with R and RStudio.\n\nThe slides are embedded below and you can also [get them fullscreen online](https://matt-dray.github.io/reproducibility-ds-week/#1) (press 'F' for fullscreen and 'P' for presenter notes) and find [the source on GitHub](https://github.com/matt-dray/reproducibility-ds-week).\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"shareagain\" style=\"min-width:300px;margin:1em auto;\" data-exeternal=\"1\">\n<iframe src=\"https://matt-dray.github.io/reproducibility-ds-week/\" width=\"400\" height=\"300\" style=\"border:2px solid currentColor;\" loading=\"lazy\" allowfullscreen></iframe>\n<script>fitvids('.shareagain', {players: 'iframe'});</script>\n</div>\n```\n:::\n:::\n\n\n## Three things\n\nThe three things to achieve reproducibility were very broad. I focused on R and some specific packages that could be helpful, but the ideas are transferable and there's lots of ways to achieve the same thing.\n\nThe things were:\n\n### 1. Centralise everything\n\nGet code, functions, data, documentation in one place. Use [R Projects](https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects) in RStudio and [write packages](https://www.hvitfeldt.me/blog/usethis-workflow-for-package-development/). This makes code more shareable and improves the chance that others can recreate things on their machine.\n\n### 2. Report with code\n\nPut code inside your report so that updates to data and code will be reflected instantly. Use [R Markdown](https://rmarkdown.rstudio.com/) and other formats like Yihui Xie's [{xaringan}](https://slides.yihui.org/xaringan/#1) for reproducible slides and [{bookdown}](https://bookdown.org/yihui/bookdown/) by for reproducible books.\n\n### 3. Manage workflows\n\nDon't use your brain to store information about the dependencies within your analysis. Use [{drake}](https://docs.ropensci.org/drake/) by Will Landau instead. It remembers all the relationships between the files, objects and fcuntions in your analysis and only re-runs what needs to be re-run following changes.\n\n## Acknowledgements\n\nI keep referring to the same resources about reproducibility. Take a look at:\n\n* [Reproducible Analytical Pipelines](https://ukgovdatascience.github.io/rap-website/) (RAP), a UK government initiative to make publications more reproducible\n* [The Turing Way](https://the-turing-way.netlify.com/introduction/introduction), a book about reproducibility from [the Alan Turing Institute](https://www.turing.ac.uk/)\n* [Putting the R into reproducible research](https://annakrystalli.me/talks/r-in-repro-research-dc.html#1), some excellent and comprehensive slides by [Anna Krystalli](http://www.annakrystalli.com/)\n\n## On this blog\n\nRelevant rostrum.blog reproduciblity-related writings:\n\n* [Build an R package with {usethis}](https://www.rostrum.blog/2019/11/01/usethis/)\n* [Git going: Git and GitHub](https://www.rostrum.blog/2019/10/21/git-github/)\n* [Can {drake} RAP?](https://www.rostrum.blog/2019/07/23/can-drake-rap/)\n* [A GitHub repo template for R analysis](https://www.rostrum.blog/2019/06/11/r-repo-template/)\n* [Knitting Club: R Markdown for beginners](https://www.rostrum.blog/2018/09/24/knitting-club/)\n\n## Environment {.appendix}\n\n<details><summary>Session info</summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast rendered: 2023-07-22 16:29:14 BST\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2   compiler_4.3.1      fastmap_1.1.1      \n [4] cli_3.6.1           tools_4.3.1         htmltools_0.5.5    \n [7] xaringanExtra_0.7.0 rstudioapi_0.15.0   yaml_2.3.7         \n[10] rmarkdown_2.23      knitr_1.43.1        jsonlite_1.8.7     \n[13] xfun_0.39           digest_0.6.33       rlang_1.1.1        \n[16] evaluate_0.21      \n```\n:::\n:::\n\n</details>",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/fitvids-2.1.1/fitvids.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}