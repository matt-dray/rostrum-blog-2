{
  "hash": "9353d062db0e1f08ec019fe819026b76",
  "result": {
    "markdown": "---\ntitle: A Pokémon sprite carousel with {slickR}\ndate: 2020-02-05\nslug: slickr\ncategories:\n  - dataviz\n  - htmlwidgets\n  - javascript\n  - r\n  - slickr\n  - videogames\n---\n\n\n<iframe src=\"https://matt-dray.github.io/pkmn_slickr/carousel_only\" width=\"100%\" height=\"550\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n\n## tl;dr\n\nYou can make fun little scrolling 'carousel' type widgets in R with [the {slickR} package](https://metrumresearchgroup.github.io/slickR/). I've made an example that shows Pokemon sprites.\n\n## Ride the carousel\n\nI was browsing GitHub and the [{slickR}](https://metrumresearchgroup.github.io/slickR/) package by [Jonathan Sidi](https://yonicd.netlify.com/) was suggested as a repo to explore.\n\n{slickR} is an [htmlwidget](https://www.htmlwidgets.org/) that generates carousels using the [Slick JavaScript library](https://kenwheeler.github.io/slick/) by [Ken Wheeler](http://kenwheeler.github.io/).\n\nYou've seen carousels before. They're pretty ubiquitous for scrolling horizontally through images on websites. {slickR} provides a neat way of embedding these in R Markdown documents and Shiny apps. Plus, the elements in the carousel can be basically anything (iframes, plots, etc), not just images.\n\n## PokéDemo\n\nI followed the excellent [guidance on the {slickR} site](https://metrumresearchgroup.github.io/slickR/articles/basics.html) to set up a basic carousel featuring Pokémon sprites[^tm] from the [Pokémon Black and White games](https://bulbapedia.bulbagarden.net/wiki/Pok%C3%A9mon_Black_and_White_Versions), which I collected via [veekun.com](https://veekun.com/dex/downloads).\n\nI've embedded the demo at the top of this page, but you can visit it on [a dedicated page](https://matt-dray.github.io/pkmn_slickr/) or see its [source](https://www.github.com/matt-dray/pkmn_slickr). These are probably best viewed on a desktop machine.\n\nIn fact, it's three carousels that are stacked and synchronised: one with the front sprite, one with the back sprite and one that shows the number and name of the Pokémon. Click a sprite to go to the relevant page on [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Main_Page), the Pokémon wiki.\n\nI've also set each page to display three 'mon at a time and that each page will advance by three. This is so that I can display one Pokémon evolutionary chain per page, since the max chain length is three (e.g. Bulbasaur > Ivysaur > Venusaur). I added a blank spacer pad where a chain was shorter than three (e.g. Rattata > Raticate > BLANK, or Farfetch'd > BLANK > BLANK).\n\nThe pages auto-advance in the demo above, but can be advanced manually in the [standalone version](https://matt-dray.github.io/pkmn_slickr/) by clicking the directional arrows, or by using your arrow keys if the widget has been selected.\n\nIt's also possible to jump to a specific evolutionary chain by using the page 'dots' underneath the carousel. Here, you can click one of the tiny sprites to jump to the page that contains the evolutionary chain that starts with that Pokémon.\n\n## Carousel mechanics\n\nBelow is some illustrative code for the demo. The [code for the full carousel demo](https://github.com/matt-dray/pkmn_slickr/blob/master/carousel_only.Rmd) is available from the [matt-dray/pkmn_slickr](https://github.com/matt-dray/pkmn_slickr) repo.\n\nAgain, do check out [the really helpful NBA example on the {slickR} website](https://metrumresearchgroup.github.io/slickR/articles/basics.html) for more examples.\n\n### One carousel\n\nHere's an example of the code for an individual carousel that displays just the front-facing sprite:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfront_carousel <- slickR(\n  obj = pkmn2$sprite_front_src,\n  objLinks = pkmn2$url,\n  height = 200, width = \"100%\"\n) +\n  settings(\n    autoplay = TRUE, arrows = FALSE,\n    slidesToShow = 3, slidesToScroll = 3\n  )\n```\n:::\n\n\nBasically, You call the `slickR()` function with arguments that define the `obj`ect to display and also things like links (`objLinks`) and the size of the elements. Here, `pkmn2$sprite_front_src` is a vector of sprite image sources, for example.\n\nYou can then tweak the look and behaviour by adding `settings()` with a `+` (like {ggplot2}). Here, `autoplay` advances the slides automatically; `arrows` dictates whether to show manually-clickable advancement buttons; and `slidesToShow` and `slidesToScroll` control the number of elements seen on one 'page' of elements and how many elements to advance by.\n\n### Synced sandwich\n\nI created two more of these {slickR} objects for the back sprite and the Pokemon name and number, with slight differences compared to the code above.\n\nI then sandwiched all three together like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncarousel <-\n  front_carousel %synch%\n  back_carousel %synch%\n  names_carousel \n```\n:::\n\n\nThe `%synch%` operator makes sure that advancing any of the carousels advances them all together.\n\n### Sprite dots\n\nThe third of the three carousels, the `names_carousel` has the argument `dots = TRUE` in its settings. This makes dots appear under the carousel to show which 'page' the carousel is currently displaying. You can also click these dots to jump to a given page.\n\nYou can change these dots to other things, like numeric values. I was able to use the [guidance](https://metrumresearchgroup.github.io/slickR/articles/basics.html) to replace the dots with sprites. This means you can click a mini sprite under the carousel to jump to the page where that Pokémon starts an evolutionary chain.\n\n## Stop, let me off\n\nI have a lot of ideas for how to use this package, but for more on {slickR} in the meantime, check out:\n\n* the [{slickR} site](https://metrumresearchgroup.github.io/slickR/)\n* the [basic walkthrough](https://metrumresearchgroup.github.io/slickR/articles/basics.html)\n* how to [use {slickR} in Shiny](https://metrumresearchgroup.github.io/slickR/articles/shiny.html) and [other advanced things](https://metrumresearchgroup.github.io/slickR/articles/index.html)\n* the [package source](https://github.com/metrumresearchgroup/slickR)\n\n## Environment {.appendix}\n\n<details><summary>Session info</summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast rendered: 2023-07-22 16:15:01 BST\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2 compiler_4.3.1    fastmap_1.1.1     cli_3.6.1        \n [5] tools_4.3.1       htmltools_0.5.5   rstudioapi_0.15.0 yaml_2.3.7       \n [9] rmarkdown_2.23    knitr_1.43.1      jsonlite_1.8.7    xfun_0.39        \n[13] digest_0.6.33     rlang_1.1.1       evaluate_0.21    \n```\n:::\n:::\n\n</details>\n\n[^tm]: Pokémon and Pokémon character names are trademarks of [Nintendo](https://www.nintendo.com/). Copyright is 1995–2020 [Nintendo](https://www.nintendo.com/)/[Creatures Inc](https://www.creatures.co.jp/)/[GAME FREAK inc](https://www.gamefreak.co.jp/)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}