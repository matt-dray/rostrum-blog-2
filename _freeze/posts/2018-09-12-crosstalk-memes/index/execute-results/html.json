{
  "hash": "c1202f537b9a18474a5989308ea91928",
  "result": {
    "markdown": "---\ntitle: 'EARL 2018: {crosstalk} in memes'\ndate: 2018-09-12\nslug: crosstalk-memes\ncategories:\n  - crosstalk\n  - event\n  - memes\n  - r\n  - xaringan\n---\n\n\n![](resources/doge.jpg){fig-alt=\"The 'doge' meme: a shiba inu dog is surrounded by text in poor English, like 'such interact' and 'much widget'.\" width=\"50%\" fig-align=\"left\"}\n\n## tl;dr\n\nI presented [slides](https://matt-dray.github.io/earl18-presentation/) at an R conference about [{crosstalk}](http://rstudio.github.io/crosstalk/).\n\n## EARL 2018\n\nI gave a talk called 'Crosstalk: Shiny-like without Shiny'[^dull] at the 2018 [EARL conference](https://earlconf.com) in London.\n\n[The {crosstalk} package](http://rstudio.github.io/crosstalk/) by [Joe Cheng](https://twitter.com/jcheng?lang=en) allows [htmlwidgets](https://www.htmlwidgets.org/)---JavaScript visualisations wrapped in R code---to interact with each other. Filtering the data in widget causes all widgets to be filtered. This can be done inside an [R Markdown](https://rmarkdown.rstudio.com/) document (including [Flexdashboard](https://rmarkdown.rstudio.com/flexdashboard/)) for easy server-less sharing in HTML format.\n\n## {crosstalk} in action\n\nBelow is a very simple example from [the {crosstalk} documentation site](http://rstudio.github.io/crosstalk/using.html). Click and drag to highlight points in the interactive plot ({d3scatter} package) and 'brush' the map markers (button in upper left) on the interactive map ({leaflet} package) and see how selections in each impact each other. Without {crosstalk}, selections in one of these widgets *would not* impact the others.\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-adec577e62989e3420da\" style=\"width:100%;height:300px;\" class=\"d3scatter html-widget \"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-adec577e62989e3420da\">{\"x\":{\"data\":{\"x\":[278,148,622,184,329,499,118,82,162,203,123,44,210,422,57,64,608,102,180,583,385,275,243,234,150,210,50,548,223,533,577,139,71,246,504,76,109,211,402,391,365,224,136,168,60,598,117,576,85,591,215,70,582,228,608,477,201,59,41,548,49,234,49,161,356,40,505,562,417,589,153,202,487,68,100,243,49,549,143,499,594,492,550,292,488,431,66,164,246,71,47,545,493,535,300,595,63,644,604,218],\"y\":[4.7,4.6,4.2,4.4,4.5,5.1,4.6,4.4,5.1,4.5,4.7,4.8,4.1,4.6,5.2,5.1,4.7,4.3,4.2,5.4,5.2,4,4.9,4.7,4.9,4.2,4.7,4.7,4.1,4.2,4.7,4.2,5.2,4.3,4.2,4.9,5.4,4.2,4.3,4,4.5,4.2,4.7,4.7,4.6,4.5,5.1,4.5,5.3,4.5,5.1,4.8,4.7,4.8,4.6,4,4.7,4.9,4.5,4.1,4.8,4.7,5,4.4,4.2,4.8,4.9,4.5,5.6,4,5.6,4.2,4.3,4.7,4.6,4.7,5,4.7,4.6,4.5,4.9,4.3,5.3,4.8,4.6,5.4,4.4,4.8,4.3,4.3,4.5,4.2,4.3,4.4,4.2,4.1,5,4.9,4.5,5.3],\"key\":[\"622\",\"647\",\"660\",\"768\",\"47\",\"448\",\"329\",\"648\",\"925\",\"503\",\"408\",\"392\",\"806\",\"195\",\"746\",\"615\",\"103\",\"391\",\"868\",\"363\",\"692\",\"733\",\"993\",\"613\",\"597\",\"140\",\"32\",\"262\",\"964\",\"210\",\"584\",\"884\",\"853\",\"419\",\"274\",\"915\",\"965\",\"22\",\"809\",\"772\",\"97\",\"95\",\"442\",\"470\",\"359\",\"694\",\"910\",\"21\",\"758\",\"749\",\"465\",\"594\",\"808\",\"827\",\"739\",\"113\",\"929\",\"352\",\"961\",\"690\",\"498\",\"960\",\"549\",\"183\",\"688\",\"552\",\"821\",\"886\",\"636\",\"780\",\"649\",\"917\",\"710\",\"536\",\"108\",\"599\",\"889\",\"537\",\"677\",\"439\",\"489\",\"278\",\"623\",\"33\",\"428\",\"25\",\"829\",\"646\",\"705\",\"799\",\"789\",\"906\",\"49\",\"59\",\"265\",\"966\",\"574\",\"792\",\"457\",\"318\"]},\"color_spec\":{\"type\":\"constant\",\"value\":\"#333333\"},\"color\":null,\"x_label\":\"depth\",\"y_label\":\"mag\",\"x_lim\":null,\"y_lim\":null,\"group\":\"SharedData350af8ae\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-1f2b8e919cc4c379c607\" style=\"width:100%;height:300px;\" class=\"leaflet html-widget \"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1f2b8e919cc4c379c607\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addSelect\",\"args\":[\"SharedData350af8ae\"]},{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]},{\"method\":\"addMarkers\",\"args\":[[-34.63,-38.46,-17.88,-19.85,-26.4,-20.85,-20.76,-15.48,-27.64,-21.06,-15.36,-27.17,-19.13,-32.2,-31.03,-15.65,-21.88,-20.36,-17.08,-21.98,-18.8,-30.3,-20.05,-17.99,-12.84,-18.84,-16.32,-20.9,-19.69,-20.2,-20.04,-11.7,-15.18,-34.1,-20.16,-10.96,-22.04,-10.98,-20.9,-16.4,-27.24,-15.44,-21.05,-31.94,-27.18,-20.74,-28.05,-20.84,-21.13,-22.14,-29.9,-12.72,-20.07,-13.4,-20.3,-19.06,-25.81,-12.01,-23.9,-17.6,-30.04,-21.71,-15.61,-19.88,-17.61,-20.33,-24.97,-24.39,-18.82,-17.9,-37.03,-19.57,-20.97,-16.1,-20.24,-23.89,-22.82,-17.7,-15.97,-20.56,-21.07,-24.78,-24.18,-15.55,-20.61,-19.66,-15.67,-23.29,-19.45,-22.9,-21.56,-17.44,-24.12,-17.8,-19.41,-17.99,-20.41,-26,-18.06,-18.77],[179.1,176.03,180.58,184.51,181.7,181.59,185.77,186.73,182.22,183.81,167.51,183.68,184.97,179.61,181.59,186.26,180.39,186.16,185.96,179.6,182.41,180.8,183.86,168.98,166.78,184.16,166.74,181.51,184.23,182.3,181.87,166.3,167.23,181.8,181.99,165.97,183.95,166.32,182.02,182.73,181.11,185.26,184.68,180.57,182.53,181.53,182.39,181.16,185.6,180.64,181.16,166.28,181.75,166.9,181.4,182.45,182.54,166.29,184.6,181.5,181.2,183.58,187.15,184.3,183.32,168.71,179.54,178.98,182.21,181.5,177.52,184.47,181.72,167.25,169.49,182.39,184.52,181.31,186.08,182.04,181.13,179.22,179.02,185.05,182.6,180.28,185.23,184,184.48,183.8,185.5,181.33,180.08,181.35,183.05,181.59,186.51,178.43,181.59,169.24],null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},null,null,null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},{\"ctKey\":[\"622\",\"647\",\"660\",\"768\",\"47\",\"448\",\"329\",\"648\",\"925\",\"503\",\"408\",\"392\",\"806\",\"195\",\"746\",\"615\",\"103\",\"391\",\"868\",\"363\",\"692\",\"733\",\"993\",\"613\",\"597\",\"140\",\"32\",\"262\",\"964\",\"210\",\"584\",\"884\",\"853\",\"419\",\"274\",\"915\",\"965\",\"22\",\"809\",\"772\",\"97\",\"95\",\"442\",\"470\",\"359\",\"694\",\"910\",\"21\",\"758\",\"749\",\"465\",\"594\",\"808\",\"827\",\"739\",\"113\",\"929\",\"352\",\"961\",\"690\",\"498\",\"960\",\"549\",\"183\",\"688\",\"552\",\"821\",\"886\",\"636\",\"780\",\"649\",\"917\",\"710\",\"536\",\"108\",\"599\",\"889\",\"537\",\"677\",\"439\",\"489\",\"278\",\"623\",\"33\",\"428\",\"25\",\"829\",\"646\",\"705\",\"799\",\"789\",\"906\",\"49\",\"59\",\"265\",\"966\",\"574\",\"792\",\"457\",\"318\"],\"ctGroup\":\"SharedData350af8ae\"}]}],\"limits\":{\"lat\":[-38.46,-10.96],\"lng\":[165.97,187.15]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nYou can find [a more advanced example of {crosstalk} in action using Gapminder data](http://rstudio-pubs-static.s3.amazonaws.com/209203_02f14fea3274448bbbf8d04c99c6051b.html). It links HTML widgets from three packages -- {leaflet}, {d3scatter} and {DT} -- and includes a couple of sliders for filtering. All of this in less than 80 lines of code.\n\nRemember all this is happening *in the browser* and *without Shiny*. And all you need to do is give each of your widgets a 'shared data' object. So instead of this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- readRDS(\"data/some_data.RDS\")  # get data\ndatatable(data)  # interactive table\nleaflet(data) %>% addTiles() %>% addMarkers()  # map\n```\n:::\n\n\nWe can just add one extra line to create the shared data object and pass that to our widgets instead:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- readRDS(\"data/some_data.RDS\")\nshared <- SharedData$new(data)  # just add this line\ndatatable(shared)  # now refer to the shared data object\nleaflet(shared) %>% addTiles() %>% addMarkers()\n```\n:::\n\n\n## Slides\n\nMy task: I had to create a very simple app for our users to explore schools data. My problem: I didn't have a server for hosting such an app. In other words, [Shiny](https://shiny.rstudio.com/) wasn't really feasible in this case.\n\nI've embedded the slides below. Click inside the frame and use the left and right arrow keys to navigate. Press <kbd>P</kbd> to see the presenter notes.\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"shareagain\" style=\"min-width:300px;margin:1em auto;\" data-exeternal=\"1\">\n<iframe src=\"https://matt-dray.github.io/earl18-presentation/\" width=\"400\" height=\"300\" style=\"border:FALSE;\" loading=\"lazy\" allowfullscreen></iframe>\n<script>fitvids('.shareagain', {players: 'iframe'});</script>\n</div>\n```\n:::\n:::\n\n\nYou can also [view the slides in a dedicated browser tab](https://matt-dray.github.io/earl18-presentation/).\n\nOn GitHub you can find [code for the presentation](https://github.com/matt-dray/earl18-presentation), written with [the {xaringan} package](https://bookdown.org/yihui/rmarkdown/xaringan.html), and [code for the dummy examples in it](https://github.com/matt-dray/earl18-crosstalk).\n\n## Memestravaganza\n\nSince it's 2018, the only way to publicise such a presentation is to exploit the power of [memes](https://knowyourmeme.com/memes/memes) and social media; the only method for communicating with [millenials](https://eu.usatoday.com/story/money/2017/05/22/avocado-latte-may-just-what-hipster-millennials-dreamed-maybe-not/102002538/) and [younglings](https://i.kym-cdn.com/entries/icons/mobile/000/023/078/youngling.jpg) these days.\n\nBut why stop at one meme? Why not a *meme advent calendar* counting down the week in advance of the conference?[^answer] You can [find them all (plus bonuses) in my earl18-presentation GitHub repo](https://github.com/matt-dray/earl18-presentation/blob/master/memes/links.md)\n\nI've reproduced them here with a bit more context.\n\n### Day one\n\n![](resources/scroll-of-truth.jpg){fig-alt=\"An explorer finds the scroll of truth and it says 'Shiny isn't always the answer, so he throws it away in disgust.\" width=\"50%\" fig-align=\"left\"}\n\nYeah, so I figured that Shiny was the only way to make interactive apps with R. But I had a problem: no server access for hosting the app. {crosstalk} is worth considering in this instance because you can share outputs as HTML files, which will open in the user's browser.\n\n### Day two\n\n![](resource/is-this.jpg){fig-alt=\"A man, labelled 'me six months ago' gestures to a butterfly labelled 'crosstalk + flexdashboard' and says 'is this Shiny?'\" width=\"50%\" fig-align=\"left\"}\n\nR users can probably recognise an interactive app made with Shiny[^nz]. Probably a [Flexdashboard](https://rmarkdown.rstudio.com/flexdashboard/) is easy to recognise too; these are typically used for non-interactive dashboard displays, but {crosstalk} can be used to blur this line by making the elements interact with each other.\n\n### Day three\n\n![](resources/american-chopper-argument.jpg){fig-alt=\"A man argues that the other must use Shiny because it's the only way to get interactivity; the other man says {crosstalk} solves this; the first man relents.\" width=\"50%\" fig-align=\"left\"}\n\nSelf-explanatory, really. A small app can be made using {crosstalk} and shared freely. Try it!\n\n### Day four\n\n![](resources/trump.jpg){fig-alt=\"President Trump holds up a document he has just signed, which reads 'CROOKED Hillary hosts Shiny apps on a PRIVATE server! EVERYONE agrees that TRUE Americans consider CROSSTALK!'\" width=\"50%\" fig-align=\"left\"}\n\nIt's 2018. You've got to exploit Trump for personal gain at some point. One potential drawback of Shiny is the need to host the app on a server. Not ideal if you don't have access to one. This is not a problem with {crosstalk}-enabled tools, which you can share as HTML files.\n\nBonus:\n\n![](resources/msssagg.jpg){fig-alt=\"A red Trump supporter hat embroidered with the phrase 'make sharing small simple apps great again'.\" width=\"50%\" fig-align=\"left\"}\n\n### Day five\n\n![](resources/trace-cat.jpg){fig-alt=\"A girl traces around her cat labelled 'Shiny', revealing a poor rendering underneath labelled 'Crosstalk'.\" width=\"50%\" fig-align=\"left\"}\n\nYeah, so there's a false equivalency here. {crosstalk} doesn't necessarily help provide a direct replacement for Shiny. You still need Shiny to make 'proper' apps. But hey, the picture that the little girl has drawn still looks like a cat, right?\n\n![](resources/bad-boy.jpg){fig-alt=\"A car salesman slaps the roof of a car and says 'This bad boy fits so few data in it' to a customer.\" width=\"50%\" fig-align=\"left\"}\n\nSince everything is rendered in-browser with {crosstalk}, you're limited by your browser's power. This means that the number of points on your interactive map, for example, is limited. In practice it's maybe a couple of hundred. You can get around this by controlling point layers that can be switched on and off so fewer points are rendered at any one point But that's a pain.\n\n### Day six\n\n![](resources/swerve.jpg){fig-alt=\"A car labelled 'me realising how simple Crosstalk is' swerves off the freeway, labelled 'data', onto the off-ramp labelled 'SharedData$new(data)'.\" width=\"50%\" fig-align=\"left\"}\n\nLet's say you've read your data into the object `data`. Ordinarily you would do `leaflet::leaflet(data)`, `DT::datatable(data)`, etc, to create HTML widgets containing the data. To get the widgets to talk to each other with {crosstalk}, you make a *shared data* object: `shared <- SharedData$new(data)`. Now you can do `leaflet::leaflet(shared)`, `DT::datatable(shared)`, etc, to get widget interactivity. Only one extra line of code is needed.\n\n### Day seven\n\n![](resources//arms.jpg){fig-alt=\"Two muscular arms labelled 'Shiny' and 'Crosstalk' grip their hands, labelled 'sweet apps', in triumph.\" width=\"50%\" fig-align=\"left\"}\n\nYou can use both frameworks to do cool stuff! Just consider the context and the limitations of {crosstalk} when you do this.\n\nAlso, turns out I punked you: my talk was called 'Crosstalk: Shiny-like without Shiny' but [you can actually put Shiny in your {crosstalk}](http://rstudio.github.io/crosstalk/shiny.html). Why? Your brushing and filtering with {crosstalk} can be used to generate Shiny outputs and vice versa. For simplicity, my talk focuses only on {crosstalk}\n\n## Environment {.appendix}\n\n<details><summary>Session info</summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast rendered: 2023-08-08 18:23:38 BST\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] d3scatter_0.1.0 leaflet_2.1.2   crosstalk_1.2.0\n\nloaded via a namespace (and not attached):\n [1] cli_3.6.1           knitr_1.43.1        rlang_1.1.1        \n [4] xfun_0.39           promises_1.2.0.1    shiny_1.7.4.1      \n [7] jsonlite_1.8.7      xtable_1.8-4        htmltools_0.5.5    \n[10] httpuv_1.6.11       xaringanExtra_0.7.0 rmarkdown_2.23     \n[13] evaluate_0.21       ellipsis_0.3.2      fastmap_1.1.1      \n[16] yaml_2.3.7          lifecycle_1.0.3     compiler_4.3.1     \n[19] htmlwidgets_1.6.2   Rcpp_1.0.11         rstudioapi_0.15.0  \n[22] later_1.3.1         digest_0.6.33       R6_2.5.1           \n[25] magrittr_2.0.3      tools_4.3.1         lazyeval_0.2.2     \n[28] mime_0.12          \n```\n:::\n:::\n\n</details>\n\n[^dull]: Running joke: *Shiny without Shiny? Sounds like a **dull** talk lol.*\n[^answer]: Answer: because you have better things to do.\n[^nz]: Yeah, but have you seen [The New Zealand tourism dashboard](https://mbienz.shinyapps.io/tourism_dashboard_prod/)?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/d3-3.5.9/d3.min.js\"></script>\n<link href=\"../../site_libs/d3scatter-0.0.0/d3scatter.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/d3scatter-0.0.0/d3scatter.js\"></script>\n<script src=\"../../site_libs/d3scatter-binding-0.1.0/d3scatter.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-binding-2.1.2/leaflet.js\"></script>\n<link href=\"../../site_libs/leaflet-easybutton-1.3.1/easy-button.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-easybutton-1.3.1/easy-button.js\"></script>\n<script src=\"../../site_libs/leaflet-easybutton-1.3.1/EasyButton-binding.js\"></script>\n<link href=\"../../site_libs/leaflet-locationfilter2-0.1.1/locationfilter.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-locationfilter2-0.1.1/locationfilter.js\"></script>\n<script src=\"../../site_libs/leaflet-locationfilter2-0.1.1/locationfilter-bindings.js\"></script>\n<link href=\"../../site_libs/ionicons-2.0.1/ionicons.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/fitvids-2.1.1/fitvids.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}