{
  "hash": "11c2076e355a12dfe59d53d643efafcb",
  "result": {
    "markdown": "---\ntitle: Fun and learning. In a dungeon!\ndate: 2023-03-15\nslug: in-a-dungeon\ncategories:\n  - event\n  - r\n  - r.oguelike\n  - talk\n---\n\n\n![Learn hard and you too can be a mobile gamedev like me.](resources/mobile-r.oguelike.png){fig-alt=\"RStudio running a browser on a mobile phone playing the tile-based game from the r.oguelike package.\" width=\"100%\"}\n\n## tl;dr\n\nToday I spoke at a public sector[^strike] event for data scientists[^ds]. I said that learning is best when focused into little projects that are fun.\n\n## To the point\n\nThe abstract sums it up, obviously:\n\n> Ever done a technical training module and then immediately forgot what you learnt? Do you sometimes feel like you’re ticking boxes instead of actually developing your skills? Yeah, me too. Luckily, more active styles of learning are available. Maybe you can try working on a small, focused project where you can make mistakes and have fun. I’ve had success with this and, as a bonus, accidentally learnt more than I had planned to. I’ll give you an example of my experience and some ideas for how you might be able to do it yourself. The talk will involve a detour to an underground cave, but you won’t need any extra equipment.[^roguelike]\n\nYes, a cheeky teaser there to pique the interest. But everyone came to my talk anyway because it was the only one at that timeslot.\n\nYou can just look at the slides below if you want ([direct link](https://matt-dray.github.io/in-a-dungeon), [source](https://github.com/matt-dray/in-a-dungeon)). Press 's' to pop out the speaker notes.\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"shareagain\" style=\"min-width:300px;margin:1em auto;\" data-exeternal=\"1\">\n<iframe src=\"https://matt-dray.github.io/in-a-dungeon\" width=\"1600\" height=\"900\" style=\"border:none;\" loading=\"lazy\" allowfullscreen></iframe>\n<script>fitvids('.shareagain', {players: 'iframe'});</script>\n</div>\n```\n:::\n:::\n\n\nThese were made with [Revealjs via Quarto](https://quarto.org/docs/presentations/revealjs/), of course.\n\n## On my soapbox\n\nSo what incredible insight did I bring to the event?\n\nBasically, I think 'module-based' learning—often passive video walkthroughs with comprehension exercises—are too generic and I usually struggle to remember anything from them.\n\nI think 'project-based' learning is preferable. Think about what you actually want to learn and develop a small-scope, discrete project around it. Make the subject matter fun. Fail meaningfully by be being open, recording what you've found, and involving your community.\n\nMy contrived soundbite is that module-based is done _to_ you and project-based is done _by_ you.\n\nIs this a new thought technology? No. Is it always true and applicable to everyone in every conceivable scenario and with every learning need? No. What's my expertise? None, really. I've just spent a long time in lots of different departments and I can tell you what has worked for me[^anecdote] as someone who entered the public sector with little computing or coding ability.\n\nAm I all too aware of how self-indulgent this all sounds? Yes. Did I need a whole talk to explain this? No, probably not. I'm happy if just one person stops to think about this next time they want to learn something. I'm also content if one person panicked slightly when they realised that R is a game engine now.\n\n## Environment {.appendix}\n\n<details><summary>Session info</summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast rendered: 2023-06-29 18:09:04 CEST\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Zurich\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2   compiler_4.3.1      fastmap_1.1.1      \n [4] cli_3.6.1           tools_4.3.1         htmltools_0.5.5    \n [7] xaringanExtra_0.7.0 rstudioapi_0.14     yaml_2.3.7         \n[10] rmarkdown_2.22      knitr_1.43.1        jsonlite_1.8.5     \n[13] xfun_0.39           digest_0.6.31       rlang_1.1.1        \n[16] evaluate_0.21      \n```\n:::\n:::\n\n</details>\n\n[^roguelike]: A reference of, course, to my little toy [{r.oguelike}](https://github.com/matt-dray/r.oguelike) project. This is an R package I wrote to achieve some learning goals and also to have some fun; it contains a novelty tile- and turn-based game that the player interacts with in the console. This also fit the themes of the conference—connectivity and patterns—because it contains [a procedural dungeon generator](https://www.rostrum.blog/2022/05/01/dungeon/) and [enemy pathfinding](https://www.rostrum.blog/2022/06/10/basic-search/).\n[^strike]: On the same day as train and public sector strikes, oof.\n[^ds]: I'm becoming more convinced that I don't know what 'data scientist' means anymore. 'Old man yells at cloud (computing)', etc.\n[^anecdote]: Would've been smarter to bring, y'know, actual evidence rather than anecdotes to a data science conference, eh?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/fitvids-2.1.1/fitvids.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}