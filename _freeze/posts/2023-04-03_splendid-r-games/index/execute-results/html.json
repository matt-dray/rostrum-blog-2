{
  "hash": "08e38de3c5e53e272dce98a1e088ecbb",
  "result": {
    "markdown": "---\ntitle: R is a game engine, fight me \nsubtitle:  |\n  R is '[a free software environment for statistical computing and graphics](https://www.r-project.org/)'. Ahahaha, no it's not, it's a game engine. I've created [a 'splendid' list of games](https://github.com/matt-dray/awesome-r-games) you can play—written in R—to prove it. [Help expand it](https://github.com/matt-dray/splendid-r-games/issues). [subtitle]\ndescription: |\n  R is '[a free software environment for statistical computing and graphics](https://www.r-project.org/)'. Ahahaha, no it's not, it's a game engine. I've created [a 'splendid' list of games](https://github.com/matt-dray/awesome-r-games) you can play—written in R—to prove it. [Help expand it](https://github.com/matt-dray/splendid-r-games/issues). [description]\ndate: 2023-04-02\nslug: splendid-r-games\ncategories:\n  - r\n---\n\n\n<div class=\"figure\">\n<img src=\"images/snes-r.png\" alt=\"A crudely drawn image of the buttons from a Nintendo SNES controller, but the A, B, X and Y labels have all been changed to R.\" width=\"100%\"/>\n</div>\n\n## tl;dr\n\nR is '[a free software environment for statistical computing and graphics](https://www.r-project.org/)'. Ahahaha, no it's not, it's a game engine. I've created [a 'splendid' list of games](https://github.com/matt-dray/awesome-r-games) you can play—written in R—to prove it. [Help expand it](https://github.com/matt-dray/splendid-r-games/issues).\n\n## Stats only!\n\nThe <kbd>Esc</kbd> key.\n\n> I am a quote.\n\nasdjklhald .\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This is a test\nlibrary(dplyr, warn.conflicts = FALSE)\nmtcars |> select(cyl, hp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    cyl  hp\nMazda RX4             6 110\nMazda RX4 Wag         6 110\nDatsun 710            4  93\nHornet 4 Drive        6 110\nHornet Sportabout     8 175\nValiant               6 105\nDuster 360            8 245\nMerc 240D             4  62\nMerc 230              4  95\nMerc 280              6 123\nMerc 280C             6 123\nMerc 450SE            8 180\nMerc 450SL            8 180\nMerc 450SLC           8 180\nCadillac Fleetwood    8 205\nLincoln Continental   8 215\nChrysler Imperial     8 230\nFiat 128              4  66\nHonda Civic           4  52\nToyota Corolla        4  65\nToyota Corona         4  97\nDodge Challenger      8 150\nAMC Javelin           8 150\nCamaro Z28            8 245\nPontiac Firebird      8 175\nFiat X1-9             4  66\nPorsche 914-2         4  91\nLotus Europa          4 113\nFord Pantera L        8 264\nFerrari Dino          6 175\nMaserati Bora         8 335\nVolvo 142E            4 109\n```\n:::\n:::\n\n\nR is not a general, multi-purpose programming language. It was written to do statistical analysis and make charts. You are literally not allowed to do anything else with it. You should use \\<LANGUAGE\\> instead, which is much more suited to your specific use case. R is a joke language for nerds.\n\nYou should not read beyond this point if you think, quite rightly, that mirth and frivolity are unsuited to an R session.\n\n## Stats only?\n\nUnity. Unreal. GameMaker. Godot. All of these videogame engines are now obsolete. \n\nIt is R—humble R!—that represents the future of gaming.\n\nTo prove it, I've created [a list of 'splendid R games' in a GitHub repo](https://github.com/matt-dray/awesome-r-games)[^splendid] that you are welcome to contribute to.[^fool]\n\nYes, R can be used for fun. Do not tell R Core.\n\n## Wait, he's serious?\n\nI think there's three kinds of 'platform' for games written in R:\n\n1. For the console\n2. In Shiny\n3. Ported\n\nGames played in the console are pretty straightforward and probably most common. You can run some code, or a function from a package, to launch some code in the R console that you can interact with. A simple option for this might involve use of `readline()` to receive user input, for example, like [Giora Simchoni](https://www.giorasimchoni.com/)'s excellent text-based puzzler, [Castle of R](https://github.com/gsimchoni/CastleOfR).\n\n<div class=\"figure\">\n<img src=\"images/castle.png\" alt=\"Screenshot of R running in the terminal. A text interface asks the user to identify their skill in R. The user has typed option '4', which corresponds to the text 'what is R?'. The resulting text says 'welcome to the Castle of R' and explains its purpose.\" width=\"100%\"/>\n<p class=\"caption\">Giora's Castle of R running in the terminal.</p>\n</div>\n\nShiny can give you a little more flexibility when it comes to graphics and user input, at the expense of needing to host the app and maybe some extra JavaScript skills. A great example of this is [Pedro Silva](https://www.pedrocsilva.com/)'s winning entry ([app](https://sparktuga.shinyapps.io/ShinyDecisions/), [source](https://github.com/pedrocoutinhosilva/shiny.decisions)) to [the Posit Shiny contest in 2020](https://posit.co/blog/winners-of-the-2nd-shiny-contest/).\n\n<div class=\"figure\">\n<img src=\"images/decisions.png\" alt=\"A screenshot of a game that shows a world map with face, building and tree emojis on it. There are meters labelled 'wealth', 'opinion' and 'environment' and another with a halo on one end and devil horns the other. Text at the bottom says 'swipe left or right on the card to start'.\" width=\"100%\"/>\n<p class=\"caption\">A still from Pedro's Shiny Decisions app.</p>\n</div>\n\nThe third category is a little more boundary-pushing. Imagine if R was powerful enough to let you port existing games. Well, surprise, ya boi [Mike Cheng](https://coolbutuseless.github.io/) (aka coolbutuseless) has pushed hard on expanding the capabilities of R to run fast enough and with realtime user input,[^nara] porting the classic [_Another World_](https://en.wikipedia.org/wiki/Another_World_(video_game)) (1991) to R, which was showcased at 2022's Posit conference ([source](https://github.com/coolbutuseless/anotherworld), [video](https://www.youtube.com/watch?v=LPotWAJnE_s), [blog](https://coolbutuseless.github.io/2022/07/29/anotherworld-game-written-playable-in-r-with-nara-and-eventloop/)).\n\n<div class=\"figure\">\n<img src=\"images/another-world.png\" alt=\"A screenshot of the game with the main character apparently waving to a shadowy silhouette in the foreground. The overalid title says 'moonshot' and text at the bottom is a quote by Mike Cheng saying 'i will commit myself to achieving the goal, before the year is out, of writing and playing a videogame in R'.\" width=\"100%\"/>\n<p class=\"caption\">A still from Mike's rstudio::conf(2022) presentation, featuring Another World.</p>\n</div>\n\nOf course, within these 'platforms' are genres like word games, arcade games, puzzle games, etc. Will you be the first to create an MMORPG (a massively-multiplayer online R-powered game)?\n\n## I am an indie game dev now\n\nI've always been interested in how videogames are coded,[^yt] wishing that I could do the same myself. Of course I could simply learn 'real' programming languages. \n\nExcept that's blasphemy. Of course I'd rather break my own mind and spirit in an attempt to make R achieve 0.1% of what might be possible in P*thon.\n\nCase in point, I've made a few R packages containing some little toys (in order of gooddest to baddest):\n\n* {r.oguelike} ([source](https://github.com/matt-dray/r.oguelike), [blogs](https://www.rostrum.blog/tags/r.oguelike/)) for a procedural-dungeon explorer with enemy pathfinding and inventory \n* {tamRgo} ([source](https://github.com/matt-dray/tamRgo), [blog](https://github.com/matt-dray/tamRgo)) for a cyber pet in your R console that persists between sessions\n* {safar6} ([source](https://github.com/matt-dray/safar6), [blog](https://github.com/matt-dray/safar6)) for a text-based re-make of the Safari Zone from the first generation of Pokémon games\n* {ActionSquirrel} ([source](https://www.rostrum.blog/2021/10/03/squirrel/), [blog](https://github.com/matt-dray/ActionSquirrel)) for a tile-based, turn-based minigame in the R console\n* {hokey} ([source](https://github.com/matt-dray/hokey), [blog](https://www.rostrum.blog/2022/01/19/keypress/)) for minigames that use [direct keypress inputs with {keypress}](https://github.com/gaborcsardi/keypress)\n\n<div class=\"figure\">\n<img src=\"images/kevin.png\" alt=\"Screenshot of R running in the terminal. The get_stats and see_pet functions from the tamRgo package have been run. The first prints some output showing characteristics and status of a cyber pet. The latter prints an image of the pet to the browser. The pet is called Kevin and is 139 in age. It appears to be unalive.\" width=\"100%\"/>\n<p class=\"caption\">Hint when playing {tamRgo}: do not forget about your pet for 138 days. RIP Kevin XVIII.</p>\n</div>\n\nI've got something in the pipeline that involves extremely rudimentary physics in the R console. Wow! For release in 2023 (because game launches never go wrong).\n\n## Ready Player 2\n\nThe splendid list must be missing a bunch of games. Please leave an issue or pull request [in the splendid-r-games repo](https://github.com/matt-dray/splendid-r-games) to add more examples.\n\nNext stop: letting people run R games in the browser without an installed copy of R. This is already possible with a service like [Binder](https://mybinder.org/), which can spin up an instance of RStudio with packages pre-installed [I did this for {r.oguelike}](https://github.com/matt-dray/play-r.oguelike)).\n\n<div class=\"figure\">\n<img src=\"images/mobile-r.oguelike.png\" alt=\"RStudio running a browser on a mobile phone playing the tile-based game from the r.oguelike package.\" width=\"100%\"/>\n<p class=\"caption\">Just like [the Nokia N-Gage](https://en.wikipedia.org/wiki/N-Gage_(device)), amirite?</p>\n</div>\n\nBut soon you might be able to [use WebR to play games in the browser](https://github.com/r-wasm/webr) without even spinning up RStudio, ooh. So look out for an R version of [itch.io](https://itch.io/) in future, lol. \n\n## Session details {.appendix}\n\n<details>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast generated:  2023-04-09 23:39:50\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.0 (2022-04-22)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur/Monterey 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.0\n\nloaded via a namespace (and not attached):\n [1] fansi_1.0.3       withr_2.5.0       utf8_1.2.2        digest_0.6.31    \n [5] R6_2.5.1          lifecycle_1.0.3   jsonlite_1.8.4    magrittr_2.0.3   \n [9] evaluate_0.20     pillar_1.8.1      rlang_1.0.6       cli_3.6.0        \n[13] rstudioapi_0.14   generics_0.1.3    vctrs_0.5.2       rmarkdown_2.14   \n[17] tools_4.2.0       glue_1.6.2        htmlwidgets_1.5.4 xfun_0.37        \n[21] yaml_2.3.7        fastmap_1.1.0     compiler_4.2.0    pkgconfig_2.0.3  \n[25] htmltools_0.5.2   tidyselect_1.2.0  knitr_1.42        tibble_3.1.8     \n```\n:::\n:::\n\n</details>\n\n[^yt]: I like YouTube devlogs by folks like [Seb Lague](https://www.youtube.com/c/SebastianLague), [ThinMatrix](https://www.youtube.com/@ThinMatrix), [SquidGod](https://www.youtube.com/@SquidGodDev), [Jonas](https://www.youtube.com/c/jonastyroller), [TanTan](https://www.youtube.com/@Tantandev) and others. R can never achieve what they're up to, but I like listening through the logic of what they're doing.\n[^splendid]: I originally labelled the GitHub repo as [an 'awesome' repo](https://github.com/sindresorhus/awesome), which I later learned has [a very specific meaning](https://github.com/matt-dray/splendid-r-games/issues/4#issuecomment-1205015274). You might have seen awesome lists before, like the [awesome-quarto repo](https://github.com/mcanouil/awesome-quarto) by [Mickaël](https://github.com/mcanouil), or the new [awesome-webr list](https://github.com/nanxstats/awesome-webr) by [Nan Xiao](https://nanx.me/). 'Splendid' is much more of a Bri'ish word than 'awesome', so it feels more natural anyway.\n[^fool]: Note that I have carefully released this post just after April fool's day, which means I am super, super serious. As usual.\n[^nara]: See the [{nara}](https://coolbutuseless.github.io/package/nara/index.html) and [{eventloop}](https://coolbutuseless.github.io/package/eventloop/index.html) packages in particular.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}