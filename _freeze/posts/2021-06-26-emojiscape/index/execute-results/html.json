{
  "hash": "71337ca67530f1b7b2ee74afa702dd8a",
  "result": {
    "markdown": "---\ntitle: \"Generate an {emojiscape}\"\nauthor: Matt Dray\ndate: '2021-06-26'\nslug: emojiscape\n  - emoji\n  - r\n---\n\n\n\n\n![](resources/emojiscape.gif){fig-alt=\"Animation of an RStudio window where the generate function from emojiscape is being used to render to the console a 10 by 10 grid of emoji with a city theme, followed by an undergrowth scene with a smaller grid size, followed by the printing of a dataframe showing the set of emoji associated with the liminal scene, which are a large white square, a door and a lightbulb.\" width=\"75%\"}\n\n## tl;dr\n\nYou can print a little emoji scene to your R console with [the {emojiscape} package](https://github.com/matt-dray/emojiscape).\n\n## Really?\n\nRegular readers will know that this blog is where I implement whimsical R daydreams. Today is no exception: I've made a tiny package to print a little randomised emoji scene to my console.\n\nWhy? I've seen people make cute [emoji-based bots](https://botwiki.org/?s=emoji&search-filters-options%5B%5D=bots), which I've been interested in after making [the \\@londonmapbot Twitter bot](https://twitter.com/londonmapbot) ([post](https://www.rostrum.blog/2020/09/21/londonmapbot/), [source](https://github.com/matt-dray/londonmapbot), [BotWiki](https://botwiki.org/bot/londonmapbot/)). I also enjoyed the fun of mild randomisation in [my last post about #RecreationThursday](https://www.rostrum.blog/2021/06/21/recreate-hlito/).\n\nI've made this completely for my own amusement, so no guarantees whatsoever.\n\n## Play god\n\n### Install\n\nYou can install {emojiscape} [from GitHub](https://github.com/matt-dray/emojiscape).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## remotes::install_github(\"matt-dray/emojiscape\")\nlibrary(emojiscape)\n```\n:::\n\n\nThe package has one dependency: [the GitHub-hosted {emo} package](https://github.com/hadley/emo)[^emo] by Hadley Wickham. It implements emoji in R like `emo::ji(\"sauropod\")` 🦕.\n\nThere's no guarantee that these particular emoji will display correctly on your device and they [may have different designs](https://emojipedia.org/grimacing-face/) if you're using another operating system.\n\n### Generate \n\nLet's `generate()` a scene.\n\nThe first one is _nuts_, lol: a classic deciduous `woods`.[^size]\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate(\"woods\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n🌳 🐿 🌰 🌰 🌳 🐿 🌰 🌳 🐿 🌰 \n🌳 🐿 🌳 🌳 🌰 🌳 🌳 🌰 🌰 🌳 \n🌳 🌰 🌳 🌳 🌳 🌳 🌰 🌳 🌳 🌳 \n🌳 🌳 🌳 🌳 🌳 🌳 🌰 🌳 🌳 🌳 \n🌳 🐿 🌳 🌰 🌳 🌰 🌳 🌳 🌳 🌳 \n🌳 🌳 🐿 🌳 🌳 🌳 🌳 🌳 🌰 🌳 \n🌰 🐿 🌰 🐿 🌳 🌳 🐿 🌳 🌳 🌳 \n🌳 🌰 🌰 🌳 🌳 🌳 🌳 🌳 🌳 🌳 \n🌳 🌳 🌳 🌳 🌳 🌳 🌳 🌳 🌳 🌳 \n🌳 🌳 🐿 🌳 🌳 🌳 🌳 🌳 🌰 🐿 \n```\n:::\n:::\n\n\nHold your breath, we're going to `space`. You can resize the output, but space is basically infinite and my console is not.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate(\n  terrain = \"space\",\n  grid_size = 7  # i.e. a 7x7 grid\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n⬛ ⬛ ⬛ ⬛ ⬛ ⬛ ⬛ \n⭐ ⬛ ⬛ ⬛ ⭐ ⬛ ⬛ \n⭐ ⭐ ⬛ ⭐ ⬛ ⬛ ⬛ \n⬛ ⬛ ⭐ ⬛ ⭐ ⬛ ⬛ \n⬛ ⬛ ⬛ ⬛ ⬛ ⬛ ⬛ \n⬛ ⬛ ⬛ ⭐ 🛰 ⬛ ⬛ \n⬛ ⬛ ⭐ ⭐ ⬛ ⬛ ⭐ \n```\n:::\n:::\n\n\nHere's a little raccoon `city`. Perhaps the _residents_ are _evil_. (That is a gamer joke, gg.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate(\"city\", 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n🏬 🏢 🏢 🏢 🏢 \n🏢 🏬 🏬 🏢 🏢 \n🏢 🏢 🏬 🏢 🏢 \n🏢 🏢 🏢 🏬 🏢 \n🏢 🏢 🦝 🏢 🏢 \n```\n:::\n:::\n\n\nI have a PhD in dead leaves, so I had to add `undergrowth`. _Ant_ you glad I included it?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate(\"undergrowth\", 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n🍂 🐜 🍂 🐜 🍂 \n🐜 🍄 🍂 🍂 🍂 \n🍂 🍂 🍂 🍂 🍂 \n🍂 🍂 🐜 🍂 🐜 \n🍂 🍂 🍂 🍂 🍂 \n```\n:::\n:::\n\n\nHere endeth the puns.\n\n### Terrains\n\nSo what are all the available terrain options?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npaste(as.list(args(generate))$terrain)[-1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"arable\"      \"city\"        \"desert\"      \"forest\"      \"garden\"     \n [6] \"liminal\"     \"mountains\"   \"ocean\"       \"pastoral\"    \"polar\"      \n[11] \"rainforest\"  \"sky\"         \"space\"       \"suburbs\"     \"traffic\"    \n[16] \"undergrowth\" \"woods\"      \n```\n:::\n:::\n\n\nThis list may go out of date if more options are added in future.\n\nExpand the sections below to see each terrain's emoji set and previews of the output for each one.\n\n<details><summary>Click for all emoji sets</summary>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n\nterrain = \"arable\"\n  terrain        name emoji     freq\n1  arable ear_of_corn    🌽   common\n2  arable     tractor    🚜 uncommon\n3  arable       mouse    🐭     rare\n\nterrain = \"city\"\n  terrain             name emoji     freq\n1    city  office_building    🏢   common\n2    city department_store    🏬 uncommon\n3    city          raccoon    🦝     rare\n\nterrain = \"desert\"\n  terrain   name emoji     freq\n1  desert desert     🏜   common\n2  desert cactus    🌵 uncommon\n3  desert  camel    🐫     rare\n\nterrain = \"forest\"\n  terrain           name emoji     freq\n1  forest evergreen_tree    🌲   common\n2  forest       squirrel     🐿 uncommon\n3  forest christmas_tree    🎄     rare\n\nterrain = \"garden\"\n  terrain          name emoji     freq\n1  garden          rose    🌹   common\n2  garden      seedling    🌱 uncommon\n3  garden wilted_flower    🥀     rare\n\nterrain = \"liminal\"\n  terrain               name emoji     freq\n1 liminal white_large_square    ⬜   common\n2 liminal               door    🚪 uncommon\n3 liminal         light_bulb    💡     rare\n\nterrain = \"mountains\"\n    terrain                 name emoji     freq\n1 mountains             mountain     ⛰   common\n2 mountains snow_capped_mountain     🏔️ uncommon\n3 mountains                 goat    🐐     rare\n\nterrain = \"ocean\"\n  terrain          name emoji     freq\n1   ocean    water_wave    🌊   common\n2   ocean desert_island     🏝 uncommon\n3   ocean       dolphin    🐬     rare\n\nterrain = \"pastoral\"\n   terrain           name emoji     freq\n1 pastoral        rooster    🐓   common\n2 pastoral            egg    🥚 uncommon\n3 pastoral hatching_chick    🐣     rare\n\nterrain = \"polar\"\n  terrain            name emoji     freq\n1   polar cloud_with_snow     🌨   common\n2   polar       snowflake     ❄️ uncommon\n3   polar         penguin    🐧     rare\n\nterrain = \"rainforest\"\n     terrain           name emoji     freq\n1 rainforest deciduous_tree    🌳   common\n2 rainforest          snake    🐍 uncommon\n3 rainforest        gorilla    🦍     rare\n\nterrain = \"sky\"\n  terrain            name emoji     freq\n1     sky cloud_with_rain     🌧   common\n2     sky         rainbow    🌈 uncommon\n3     sky        airplane     ✈️     rare\n\nterrain = \"space\"\n  terrain               name emoji     freq\n1   space black_large_square    ⬛   common\n2   space               star    ⭐ uncommon\n3   space              orbit     🛰     rare\n\nterrain = \"suburbs\"\n  terrain              name emoji     freq\n1 suburbs    deciduous_tree    🌳   common\n2 suburbs house_with_garden    🏡 uncommon\n3 suburbs     person_biking    🚴     rare\n\nterrain = \"traffic\"\n  terrain       name emoji     freq\n1 traffic automobile    🚗   common\n2 traffic       taxi    🚕 uncommon\n3 traffic      truck    🚚     rare\n\nterrain = \"undergrowth\"\n      terrain        name emoji     freq\n1 undergrowth fallen_leaf    🍂   common\n2 undergrowth         ant    🐜 uncommon\n3 undergrowth    mushroom    🍄     rare\n\nterrain = \"woods\"\n  terrain           name emoji     freq\n1   woods deciduous_tree    🌳   common\n2   woods       chestnut    🌰 uncommon\n3   woods       chipmunk     🐿     rare\n```\n:::\n:::\n\n\n</details>\n\n<details><summary>Click for all previews</summary>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n\nterrain = \"arable\"\n🌽 🌽 🌽 🌽 🌽 🌽 🌽 🚜 🌽 🌽 \n🌽 🌽 🌽 🌽 🌽 🚜 🚜 🌽 🌽 🌽 \n🚜 🌽 🌽 🌽 🌽 🌽 🌽 🚜 🌽 🚜 \n🌽 🐭 🌽 🌽 🌽 🌽 🐭 🌽 🚜 🌽 \n🌽 🌽 🚜 🌽 🌽 🌽 🌽 🐭 🌽 🌽 \n🌽 🌽 🚜 🌽 🚜 🌽 🚜 🌽 🌽 🚜 \n🌽 🌽 🌽 🚜 🌽 🌽 🐭 🌽 🌽 🐭 \n🚜 🌽 🌽 🌽 🌽 🌽 🌽 🌽 🌽 🌽 \n🌽 🌽 🌽 🌽 🚜 🌽 🌽 🌽 🌽 🌽 \n🌽 🐭 🌽 🚜 🌽 🌽 🌽 🌽 🌽 🌽 \n\nterrain = \"city\"\n🏢 🏢 🏢 🏢 🏢 🏢 🏢 🏬 🏢 🏢 \n🏢 🏢 🏢 🏢 🏢 🏢 🏢 🏢 🏢 🏢 \n🏢 🏢 🏢 🏢 🏬 🏬 🏢 🏢 🏢 🏢 \n🏢 🏢 🏢 🏢 🏢 🏢 🏬 🏢 🏬 🏢 \n🏢 🏢 🏬 🏢 🏢 🏢 🏢 🏢 🦝 🏢 \n🏢 🏢 🦝 🏬 🏢 🦝 🏢 🏬 🏢 🏢 \n🏬 🏢 🏢 🏬 🏢 🏬 🏢 🏢 🏢 🦝 \n🏢 🏢 🏢 🏬 🏢 🏢 🏬 🏬 🏢 🏢 \n🏢 🏢 🏢 🏬 🏢 🏢 🏢 🏢 🦝 🏬 \n🏢 🏬 🏬 🏢 🏢 🏢 🏢 🏢 🏢 🏢 \n\nterrain = \"desert\"\n🏜 🏜 🏜 🏜 🏜 🌵 🏜 🏜 🏜 🌵 \n🏜 🏜 🏜 🏜 🏜 🏜 🌵 🏜 🏜 🏜 \n🏜 🏜 🏜 🏜 🏜 🏜 🏜 🏜 🌵 🏜 \n🏜 🌵 🏜 🏜 🌵 🏜 🏜 🏜 🌵 🏜 \n🏜 🏜 🏜 🏜 🏜 🏜 🌵 🐫 🏜 🏜 \n🌵 🏜 🏜 🏜 🏜 🏜 🏜 🏜 🌵 🏜 \n🏜 🏜 🏜 🏜 🏜 🌵 🏜 🏜 🏜 🏜 \n🏜 🏜 🏜 🏜 🏜 🏜 🏜 🏜 🏜 🏜 \n🏜 🏜 🏜 🐫 🏜 🌵 🌵 🏜 🌵 🏜 \n🏜 🏜 🏜 🐫 🐫 🏜 🏜 🌵 🌵 🐫 \n\nterrain = \"forest\"\n🌲 🌲 🌲 🐿 🌲 🌲 🌲 🌲 🎄 🌲 \n🌲 🌲 🌲 🌲 🌲 🌲 🐿 🌲 🌲 🌲 \n🌲 🌲 🌲 🌲 🌲 🌲 🌲 🌲 🌲 🌲 \n🌲 🌲 🐿 🌲 🌲 🌲 🐿 🌲 🌲 🌲 \n🐿 🌲 🌲 🌲 🎄 🌲 🐿 🌲 🌲 🎄 \n🌲 🌲 🌲 🌲 🐿 🌲 🌲 🎄 🌲 🌲 \n🐿 🌲 🐿 🌲 🎄 🌲 🐿 🌲 🐿 🌲 \n🌲 🌲 🌲 🌲 🌲 🌲 🌲 🌲 🌲 🐿 \n🌲 🌲 🌲 🌲 🌲 🌲 🌲 🌲 🌲 🌲 \n🌲 🌲 🌲 🌲 🌲 🌲 🌲 🌲 🐿 🌲 \n\nterrain = \"garden\"\n🌱 🌹 🌹 🌹 🌱 🌹 🌹 🌹 🌹 🌱 \n🌹 🌹 🌹 🌹 🌱 🌹 🌹 🌱 🥀 🌹 \n🌹 🌱 🌹 🌹 🌹 🌹 🌹 🌹 🥀 🌱 \n🥀 🌱 🌹 🌱 🌹 🌹 🌹 🌹 🌹 🌹 \n🌱 🥀 🌹 🌹 🌹 🥀 🌹 🌹 🌱 🌹 \n🌹 🌹 🌱 🌹 🌹 🌹 🥀 🌹 🌹 🌹 \n🌱 🌱 🌹 🌹 🌹 🌹 🌹 🌱 🌹 🌹 \n🌹 🌹 🌱 🌹 🌹 🌹 🌹 🌹 🌱 🌹 \n🌹 🌹 🌹 🌱 🌹 🌹 🌹 🌹 🌹 🌹 \n🌱 🌹 🌱 🌹 🌹 🌹 🌹 🌹 🌹 🌱 \n\nterrain = \"liminal\"\n⬜ ⬜ ⬜ ⬜ ⬜ 🚪 ⬜ ⬜ ⬜ 🚪 \n⬜ ⬜ ⬜ ⬜ ⬜ ⬜ 🚪 ⬜ ⬜ ⬜ \n⬜ ⬜ ⬜ ⬜ ⬜ ⬜ ⬜ ⬜ 🚪 ⬜ \n⬜ ⬜ ⬜ ⬜ 🚪 ⬜ ⬜ ⬜ ⬜ ⬜ \n⬜ 🚪 ⬜ ⬜ 🚪 🚪 ⬜ 🚪 ⬜ ⬜ \n⬜ 🚪 ⬜ ⬜ 💡 ⬜ ⬜ 🚪 ⬜ ⬜ \n⬜ 🚪 🚪 🚪 ⬜ ⬜ ⬜ ⬜ ⬜ ⬜ \n⬜ ⬜ ⬜ ⬜ ⬜ ⬜ ⬜ 🚪 ⬜ ⬜ \n⬜ ⬜ 🚪 ⬜ 🚪 ⬜ 🚪 ⬜ ⬜ ⬜ \n⬜ 🚪 🚪 ⬜ 🚪 ⬜ ⬜ ⬜ ⬜ ⬜ \n\nterrain = \"mountains\"\n⛰ ⛰ ⛰ 🐐 ⛰ ⛰ 🏔️ ⛰ ⛰ ⛰ \n⛰ ⛰ ⛰ 🏔️ ⛰ ⛰ 🏔️ ⛰ ⛰ ⛰ \n⛰ 🏔️ ⛰ ⛰ 🏔️ ⛰ ⛰ ⛰ ⛰ ⛰ \n⛰ ⛰ ⛰ ⛰ ⛰ ⛰ ⛰ ⛰ 🏔️ ⛰ \n⛰ ⛰ ⛰ ⛰ ⛰ ⛰ 🐐 ⛰ ⛰ 🐐 \n⛰ 🐐 🏔️ ⛰ ⛰ ⛰ ⛰ ⛰ 🏔️ 🏔️ \n⛰ ⛰ ⛰ 🏔️ 🐐 ⛰ 🏔️ 🏔️ ⛰ ⛰ \n⛰ 🏔️ 🐐 ⛰ ⛰ ⛰ ⛰ ⛰ ⛰ ⛰ \n🏔️ ⛰ ⛰ ⛰ ⛰ 🏔️ 🏔️ ⛰ 🏔️ 🐐 \n🐐 🏔️ ⛰ ⛰ ⛰ ⛰ ⛰ 🏔️ ⛰ 🏔️ \n\nterrain = \"ocean\"\n🐬 🌊 🏝 🏝 🌊 🌊 🌊 🌊 🌊 🌊 \n🐬 🌊 🌊 🌊 🌊 🌊 🐬 🌊 🌊 🌊 \n🌊 🌊 🌊 🌊 🌊 🌊 🏝 🏝 🌊 🌊 \n🌊 🏝 🌊 🌊 🌊 🌊 🌊 🌊 🐬 🌊 \n🌊 🌊 🌊 🏝 🌊 🌊 🌊 🌊 🌊 🌊 \n🌊 🌊 🐬 🌊 🐬 🌊 🌊 🌊 🏝 🌊 \n🌊 🏝 🏝 🌊 🌊 🏝 🌊 🌊 🌊 🌊 \n🌊 🌊 🏝 🌊 🌊 🌊 🌊 🐬 🌊 🌊 \n🏝 🌊 🌊 🏝 🌊 🐬 🌊 🌊 🏝 🌊 \n🌊 🌊 🌊 🌊 🏝 🌊 🌊 🏝 🏝 🌊 \n\nterrain = \"pastoral\"\n🐓 🥚 🥚 🥚 🐓 🐓 🐓 🐓 🐓 🐓 \n🐓 🐓 🐓 🐓 🐣 🐓 🥚 🐓 🐓 🐣 \n🐓 🐓 🐓 🐓 🐓 🐓 🐓 🐓 🐣 🐓 \n🐓 🐓 🥚 🐓 🐓 🐓 🐓 🐓 🐓 🐣 \n🐓 🐣 🐓 🐓 🐓 🐓 🐓 🐓 🐓 🐓 \n🥚 🐓 🥚 🐓 🐓 🐓 🐓 🐓 🐣 🐣 \n🐓 🐓 🐓 🐓 🐓 🥚 🥚 🐓 🐣 🐓 \n🐓 🐓 🐓 🥚 🐓 🐓 🐓 🐓 🐓 🐓 \n🥚 🐓 🐓 🐓 🥚 🥚 🥚 🐓 🐓 🐓 \n🥚 🐓 🥚 🥚 🥚 🐣 🐓 🥚 🐓 🥚 \n\nterrain = \"polar\"\n🌨 ❄️ ❄️ 🌨 ❄️ 🌨 🌨 🌨 ❄️ 🌨 \n🌨 🌨 🌨 🌨 🌨 🌨 ❄️ 🌨 🌨 🌨 \n🌨 🌨 🐧 🌨 ❄️ 🐧 🌨 ❄️ ❄️ 🌨 \n❄️ 🌨 🌨 🌨 🌨 🌨 ❄️ 🌨 ❄️ 🌨 \n🌨 🌨 ❄️ 🐧 ❄️ ❄️ ❄️ 🌨 🌨 ❄️ \n🌨 🌨 🌨 🌨 🌨 ❄️ 🌨 🌨 🌨 ❄️ \n🌨 ❄️ 🌨 🌨 🌨 ❄️ 🌨 🌨 🌨 🌨 \n🌨 🌨 🐧 ❄️ 🌨 ❄️ 🌨 🌨 ❄️ 🌨 \n🌨 🌨 🌨 🌨 ❄️ 🌨 🌨 🌨 🌨 🌨 \n🌨 ❄️ 🌨 🌨 🌨 🌨 🌨 🐧 ❄️ 🌨 \n\nterrain = \"rainforest\"\n🌳 🌳 🌳 🌳 🌳 🌳 🦍 🌳 🌳 🌳 \n🌳 🐍 🐍 🐍 🌳 🦍 🌳 🌳 🌳 🌳 \n🌳 🌳 🌳 🌳 🦍 🌳 🦍 🌳 🌳 🐍 \n🌳 🌳 🌳 🌳 🌳 🌳 🌳 🐍 🌳 🌳 \n🌳 🌳 🐍 🦍 🌳 🌳 🌳 🐍 🌳 🐍 \n🌳 🌳 🐍 🌳 🐍 🌳 🐍 🌳 🌳 🌳 \n🌳 🌳 🌳 🌳 🐍 🌳 🌳 🌳 🌳 🌳 \n🐍 🌳 🌳 🌳 🦍 🌳 🌳 🌳 🌳 🌳 \n🌳 🌳 🦍 🌳 🌳 🌳 🌳 🐍 🌳 🐍 \n🐍 🌳 🌳 🐍 🌳 🌳 🐍 🌳 🌳 🌳 \n\nterrain = \"sky\"\n🌧 🌧 🌧 🌧 🌧 🌧 🌧 🌧 🌈 🌈 \n🌧 🌧 🌧 🌧 🌧 🌈 🌧 🌧 🌈 🌧 \n🌧 🌧 🌈 🌧 ✈️ 🌧 🌧 🌧 🌧 ✈️ \n🌧 🌧 🌧 ✈️ 🌧 🌧 🌧 🌧 🌧 🌈 \n🌧 🌧 🌧 🌧 🌈 🌧 🌧 🌧 🌧 🌧 \n🌈 🌧 🌧 🌧 🌧 🌧 🌧 🌈 🌧 🌧 \n🌧 🌈 🌧 🌧 🌧 🌧 🌧 🌧 🌧 🌧 \n🌧 🌧 🌧 🌧 🌈 🌧 🌧 ✈️ 🌈 🌈 \n✈️ 🌧 🌧 🌧 🌧 🌧 🌧 🌧 🌈 🌈 \n🌈 🌧 🌧 🌧 🌧 🌧 🌈 🌧 🌈 🌧 \n\nterrain = \"space\"\n⬛ ⬛ ⬛ ⬛ ⬛ ⬛ ⬛ ⬛ ⬛ ⭐ \n⬛ ⬛ ⭐ ⬛ ⬛ ⬛ ⬛ ⭐ ⬛ ⬛ \n⬛ ⬛ ⬛ ⭐ ⭐ ⬛ ⭐ ⭐ ⬛ ⬛ \n⭐ ⬛ ⬛ ⭐ ⬛ 🛰 ⬛ 🛰 ⬛ ⭐ \n⬛ ⬛ ⬛ 🛰 ⭐ ⬛ ⬛ 🛰 ⬛ ⭐ \n⭐ ⬛ ⭐ ⬛ ⬛ ⬛ ⬛ ⬛ ⭐ ⬛ \n⬛ ⬛ ⭐ ⬛ ⬛ ⬛ ⬛ ⬛ ⬛ ⭐ \n⭐ ⭐ ⬛ ⬛ ⭐ ⬛ ⬛ ⬛ ⭐ ⬛ \n⬛ ⬛ ⬛ ⬛ ⭐ ⬛ ⬛ ⬛ ⭐ ⭐ \n⭐ ⬛ ⭐ ⬛ 🛰 ⬛ ⬛ ⬛ ⬛ ⬛ \n\nterrain = \"suburbs\"\n🌳 🌳 🏡 🌳 🌳 🌳 🌳 🌳 🌳 🌳 \n🌳 🏡 🌳 🌳 🏡 🌳 🏡 🌳 🚴 🏡 \n🌳 🌳 🏡 🌳 🌳 🏡 🌳 🌳 🌳 🌳 \n🌳 🌳 🌳 🌳 🏡 🌳 🌳 🚴 🌳 🌳 \n🌳 🌳 🏡 🏡 🌳 🏡 🌳 🏡 🌳 🌳 \n🌳 🌳 🏡 🌳 🌳 🏡 🌳 🏡 🌳 🏡 \n🌳 🏡 🌳 🏡 🌳 🌳 🏡 🏡 🌳 🏡 \n🌳 🌳 🌳 🌳 🌳 🚴 🏡 🌳 🏡 🌳 \n🌳 🌳 🌳 🚴 🌳 🌳 🌳 🏡 🌳 🌳 \n🌳 🏡 🌳 🏡 🌳 🌳 🏡 🏡 🌳 🌳 \n\nterrain = \"traffic\"\n🚗 🚗 🚗 🚗 🚕 🚗 🚗 🚕 🚗 🚕 \n🚗 🚗 🚗 🚗 🚕 🚗 🚗 🚚 🚗 🚗 \n🚗 🚕 🚗 🚗 🚗 🚗 🚗 🚗 🚗 🚗 \n🚗 🚗 🚚 🚗 🚗 🚗 🚗 🚗 🚕 🚗 \n🚗 🚗 🚗 🚗 🚕 🚗 🚗 🚗 🚗 🚗 \n🚗 🚗 🚚 🚗 🚗 🚗 🚕 🚗 🚕 🚗 \n🚕 🚗 🚕 🚗 🚗 🚗 🚗 🚕 🚗 🚕 \n🚕 🚕 🚕 🚕 🚗 🚗 🚕 🚗 🚗 🚗 \n🚕 🚕 🚗 🚗 🚚 🚗 🚗 🚗 🚕 🚗 \n🚗 🚗 🚗 🚗 🚗 🚗 🚗 🚗 🚗 🚚 \n\nterrain = \"undergrowth\"\n🍂 🐜 🐜 🐜 🍂 🍂 🐜 🍂 🍂 🍂 \n🍂 🍂 🍂 🍂 🍂 🐜 🍂 🍂 🍂 🍂 \n🍂 🐜 🍂 🍂 🍂 🐜 🍂 🍂 🍂 🐜 \n🍂 🐜 🐜 🍂 🍂 🍂 🐜 🍂 🍂 🍂 \n🍂 🍂 🍂 🍂 🍂 🍂 🍂 🐜 🍂 🍂 \n🍂 🍂 🍂 🍂 🍂 🐜 🍂 🐜 🍄 🍂 \n🍂 🍄 🍂 🍂 🍂 🍂 🐜 🍂 🍂 🍂 \n🍂 🍂 🐜 🍂 🐜 🍂 🍂 🍂 🍂 🍂 \n🍂 🍂 🍂 🐜 🍄 🍂 🍂 🍂 🍂 🐜 \n🐜 🍂 🍂 🍂 🍂 🍂 🍂 🍂 🍂 🍂 \n\nterrain = \"woods\"\n🌳 🌳 🌳 🌰 🌰 🌳 🌳 🌳 🌳 🌳 \n🌳 🌰 🌳 🌰 🌳 🌰 🌳 🌳 🌳 🌳 \n🌳 🌰 🌰 🌳 🌳 🐿 🌳 🌳 🐿 🌳 \n🌰 🌳 🌳 🌳 🌳 🌰 🌳 🌳 🌰 🌳 \n🌰 🌳 🌰 🌳 🌳 🌳 🌳 🌳 🌳 🌰 \n🌳 🌳 🌳 🌳 🌳 🌳 🌳 🌰 🌳 🌳 \n🌳 🌳 🌳 🌳 🌳 🌳 🐿 🌰 🌳 🌳 \n🌳 🌳 🌰 🌰 🌰 🌳 🌰 🌳 🌳 🌰 \n🌳 🌳 🌰 🌰 🌳 🌳 🌳 🌳 🌳 🌰 \n🌳 🌳 🌳 🌳 🌳 🌳 🌳 🌳 🌳 🌳 \n```\n:::\n:::\n\n\n</details>\n\n### Frequencies\n\nUse `get_set()` to see each terrain's emoji set and their 'suggested frequency' slot. In general, the most common emoji is the one that defines the background or vegetation and the rarer ones are creatures or whatever.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_set(\"mountains\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    terrain                 name emoji     freq\n1 mountains             mountain     ⛰   common\n2 mountains snow_capped_mountain     🏔️ uncommon\n3 mountains                 goat    🐐     rare\n```\n:::\n:::\n\n\nBut you can totally mess with these emoji sampling probabilities in `generate()`.\n\nAny [_The Mountain Goats_](https://en.wikipedia.org/wiki/The_Mountain_Goats) fans?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate(\n  terrain = \"mountains\",\n  prob_common = 0.1,\n  prob_uncommon = 0.2,\n  prob_rare = 0.7  # INCREASE GOAT FREQUENCY\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n🐐 🏔️ 🐐 ⛰ 🐐 🐐 🐐 🏔️ 🐐 🐐 \n🏔️ 🐐 ⛰ 🐐 🐐 🐐 🐐 🏔️ 🐐 🐐 \n🐐 🐐 🏔️ 🐐 🐐 🐐 ⛰ 🐐 🐐 🐐 \n🐐 🐐 🐐 🐐 ⛰ 🐐 🐐 🏔️ 🐐 🐐 \n🐐 🐐 🐐 🐐 🏔️ 🐐 🐐 🐐 ⛰ 🐐 \n🐐 🐐 🐐 🐐 🏔️ 🐐 🏔️ 🐐 🐐 🐐 \n🏔️ 🐐 ⛰ 🏔️ 🐐 🐐 ⛰ 🐐 ⛰ 🐐 \n🐐 🐐 🐐 ⛰ 🐐 ⛰ 🐐 🏔️ 🐐 🏔️ \n🏔️ 🐐 🐐 🐐 🐐 🐐 🏔️ 🏔️ 🏔️ 🏔️ \n🏔️ 🏔️ ⛰ 🐐 🐐 🏔️ 🐐 🐐 🏔️ 🐐 \n```\n:::\n:::\n\n\n## Approach\n\nThe `generate()` function is pretty simple. What it does is:\n\n1. Creates a vector of emojis with a length of `grid_size()` squared, sampled from the specified `terrain` set with frequencies from the `prob_*` arguments\n2. Coerces this vector to a matrix of length and width `grid_size()` (i.e. a square)\n3. Loops over each row of the matrix with `cat()` to print the output to the console\n\nIt works.\n\n## Expansion\n\nIf you really want, you can add a `terrain` option by raising [a new issue](https://github.com/matt-dray/emojiscape/issues) or pull request in [the {emojiscape} GitHub repo](https://github.com/matt-dray/emojiscape). These are specified in the `.get_emoji()` function in the [/R/utils.R](https://github.com/matt-dray/emojiscape/blob/main/R/utils.R) script.\n\n## Environment {.appendix}\n\n<details><summary>Session info</summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast rendered: 2023-07-09 20:20:13 BST\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] emojiscape_0.0.0.9000\n\nloaded via a namespace (and not attached):\n [1] digest_0.6.31     assertthat_0.2.1  lubridate_1.9.2   fastmap_1.1.1    \n [5] xfun_0.39         magrittr_2.0.3    glue_1.6.2        stringr_1.5.0    \n [9] knitr_1.43.1      htmltools_0.5.5   timechange_0.2.0  generics_0.1.3   \n[13] rmarkdown_2.23    lifecycle_1.0.3   cli_3.6.1         vctrs_0.6.3      \n[17] compiler_4.3.1    purrr_1.0.1       emo_0.0.0.9000    rstudioapi_0.14  \n[21] tools_4.3.1       evaluate_0.21     yaml_2.3.7        crayon_1.5.2     \n[25] rlang_1.1.1       jsonlite_1.8.7    htmlwidgets_1.6.2 stringi_1.7.12   \n```\n:::\n:::\n\n</details>\n\n[^emo]: In turn, {emo} is built on [emojilib](https://github.com/muan/emojilib/), which is where I got the emoji names in the form 'some_emoji' for {emojiscape}.\n[^size]: Not to scale. Or, y'know, use your imagination.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}