{
  "hash": "cf1ff56a6e6f418b2404125a94a6cc49",
  "result": {
    "markdown": "---\ntitle: Animal Crossing Tinder with {shinysense}\ndate: 2020-06-06\nslug: acnh-swipe\ncategories:\n  - googledrive\n  - googlesheets4\n  - r\n  - shiny\n  - shinysense\n  - videogames\n---\n\n\n![Lily <3 4eva](resources/20200606_screenshot-demo.png){fig-alt=\"Screenshot of the ACNH Popularity Contest app showing a villager that the user is being asked to swipe left to dislike or right to like.\" width=\"100%\"}\n\n## tl;dr \n\nThe villagers of [Animal Crossing: New Horizons](https://en.wikipedia.org/wiki/Animal_Crossing:_New_Horizons) are taking part in a popularity contest and you're the judge.\n\nI made [an R Shiny app](https://mattdray.shinyapps.io/acnh-swipe/) where you swipe right if you like a randomly-presented villager and left if you dislike them.\n\n[Visit the app here](https://mattdray.shinyapps.io/acnh-swipe/) and help decide the most popular villager! You can also [visit the source code](https://github.com/matt-dray/acnh-swipe).\n\n## Tidy Tuesday\n\n[Tidy Tuesday](https://github.com/rfordatascience/tidytuesday) is an open event for the R community. The organisers provide a data set and participants submit their take on wrangling and presenting the data, usually via Twitter with the hashtag [#tidytuesday](https://twitter.com/search?q=%23tidytuesday).\n\nA [recent data set](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-05-05/readme.md) (week 19) via [VillagerDB](https://villagerdb.com/) includes information about villager non-player characters from the wildly popular [Animal Crossing: New Horizons](https://en.wikipedia.org/wiki/Animal_Crossing:_New_Horizons) game for the Nintendo Switch. A similar set of data was also [uploaded to Kaggle](https://www.kaggle.com/jessicali9530/animal-crossing-new-horizons-nookplaza-dataset/data).\n\nI couldn't resist, having recently written about [learning R6 object-oriented programming with an Animal Crossing example](https://www.rostrum.blog/2020/04/04/repaying-tom-nook-with-r6/).\n\nThis was also a good chance to learn more about two packages in particular: {shinysense} and {googlesheets4}.\n\n### {shinysense}\n\n[Nick Strayer](http://nickstrayer.me/)'s [{shinysense}](http://nickstrayer.me/shinysense/) package lets Shiny 'sense the world around it', with modules for touch, vision, hearing and motion.\n\nI wanted to try out shinyswipr, which presents a user with a 'card' that they can swipe. The direction of swiping can be used to indicate something, like a preference. After swiping, the card content can be updated.\n\nYou can [read Nick's blog post](https://livefreeordichotomize.com/2017/03/12/introducing-shinyswipr-swipe-your-way-to-a-great-shiny-ui/) about its inception.\n\n### {googlesheets4}\n\nIn [Nick's shinyswipr example](https://nickstrayer.shinyapps.io/shinyswipr_demo/), he presents back to the user their swipe history, but how can we record the information from all users and return the collated results?\n\nThere's [a number of ways to do persistent storing with Shiny](https://shiny.rstudio.com/articles/persistent-data-storage.html), but a relatively simple one is to write the data to Google Sheets and read the entire sheet back into the app.\n\nThe [{googlesheets4} package](https://googlesheets4.tidyverse.org/) by [Jenny Bryan](https://jennybryan.org/) helps you do exactly that, with functions like `sheet_append()` and `read_sheet()`.\n\n## The ACNH Popularity Contest\n\nThere's a lot of articles online about favourite villagers, but they aren't very democratic. They tend to cite characters like [Raymond](https://animalcrossing.fandom.com/wiki/Raymond), [Beau](https://animalcrossing.fandom.com/wiki/Beau), [Marshal](https://animalcrossing.fandom.com/wiki/Marshal), [Judy](https://animalcrossing.fandom.com/wiki/Judy) and [Audie](https://animalcrossing.fandom.com/wiki/Audie).\n\nIt's time to let the people speak.\n\n## How to use\n\nIf you [visit the app](https://mattdray.shinyapps.io/acnh-swipe/), or look at the image at the top of this post, you'll see that the user is presented with a card containing a randomly-selected villager and some details (name, species, personality and hobby).\n\nYou can move the card to the right to indicate you like the character, or to the left if you dislike them. On mobile you can swipe left or right with your finger. On desktop you can click and drag the card.\n\n![No dates guaranteed. The characters aren't actually real, y'see.](resources/acnh-tinder-shiny.gif){fig-alt=\"Gif showing a blue card on a green background. The card has a picture of a villager from Nintendo's Animal Crossing game with their name, personality type, species and hobby. A mouse cursor swipes the card to the right, meaning 'like', and another card appears with a different character. The card is swiped to the left, meaning 'dislike'.\" width=\"100%\"}\n\nThe swipe event results in the information being written to a Google Sheet and triggers the entirety of the updated data set to be read back to the app. It's then wrangled lightly and the information is presented as a table of the current top 10 villagers by 'like' count. Finally, a new random villager is presented.\n\nThis is obviously a bit of fun and definitely not polished. Do [let me know](https://github.com/matt-dray/acnh-swipe/issues) of any bugs that you find, though. I'm aware that mobiles may not display the fonts correctly, for example.\n\n### Data and hosting\n\nNo data about the user is stored. The app records only the date-time, the villager name and the swipe direction.\n\nThe app is [hosted for free on shinyapps.io](https://www.shinyapps.io/), so there's a limited number of uptime hours it can use per month.\n\n## Results\n\nI hope that enough people cast a vote to make the results interesting... but [there's nearly 400 villagers](https://animalcrossing.fandom.com/wiki/Villager_list_(New_Horizons)), so that seems unlikely!\n\n<div class=\"tip\"> \n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 512 512\" style=\"height:1em;width:1em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm0-384c13.3 0 24 10.7 24 24V264c0 13.3-10.7 24-24 24s-24-10.7-24-24V152c0-13.3 10.7-24 24-24zM224 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/></svg>`{=html} <b>Note</b>\n\nI've [written a more recent post](https://www.rostrum.blog/2022/01/07/acnh-swipe-results/) where I aggregated the results for the thousands of swipes that people made in the app!\n</div>\n\n## Environment {.appendix}\n\n<details><summary>Session info</summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nLast rendered: 2023-07-19 21:47:26 BST\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2 compiler_4.3.1    fastmap_1.1.1     cli_3.6.1        \n [5] tools_4.3.1       htmltools_0.5.5   rstudioapi_0.15.0 yaml_2.3.7       \n [9] rmarkdown_2.23    knitr_1.43.1      jsonlite_1.8.7    xfun_0.39        \n[13] digest_0.6.33     rlang_1.1.1       fontawesome_0.5.1 evaluate_0.21    \n```\n:::\n:::\n\n</details>",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}