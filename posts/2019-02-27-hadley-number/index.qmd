---
title: What’s your Hadley Number?
date: 2019-02-27
slug: hadley-number
categories:
  - dataviz
  - ggraph
  - kevinbacran
  - r
  - shiny
  - tidygraph
---

![](resources/kevinbacran_hex.png){fig-alt="A hex sticker that says the package name 'kevinbacran' and a small graph where the edges join to spell 'KB' and are coloured like bacon." width="30%" fig-align="left"}

## tl;dr

I made the [{kevinbacran}](https://matt-dray.github.io/kevinbacran/) R package (as in 'Kevin Bacon' + 'CRAN', lol) to find the network separation between any two authors on [CRAN](https://cran.r-project.org).

Then I made [a Shiny app](https://mattdray.shinyapps.io/hadley-number/) to demonstrate the [Six Degrees of Kevin Bacon](https://en.wikipedia.org/wiki/Six_Degrees_of_Kevin_Bacon). Except it's for CRAN authors. And [Hadley Wickham](http://hadley.nz/) is Kevin Bacon.

## Six degrees

People are connected to each other in networks. What is the average separation of any two people in the network? There's a popular idea of there being [six degrees of separation](https://en.wikipedia.org/wiki/Six_degrees_of_separation).

Instead of separation between any two people, we can measure separation from one fixed person. For example, we can calculate a [Bacon Number](https://en.wikipedia.org/wiki/Six_Degrees_of_Kevin_Bacon) for actors connected to [Kevin Bacon](https://www.imdb.com/name/nm0000102/), 'centre of the entertainment universe'.

It works like this: you have a Bacon Number of zero if you are Kevin Bacon (hi Kevin, thanks for reading my blog). You have a Bacon Number of one if you were in a film with him. Your number is two if you were in a film with someone who was in a film with Kevin Bacon.

A more classic example is the [Erdős Number](https://en.wikipedia.org/wiki/Erd%C5%91s_number), which expresses the separation of mathematicians from the prolific [Paul Erdős](https://en.wikipedia.org/wiki/Paul_Erd%C5%91s) via published academic papers. And yes, there's [an Erdős-Bacon Number](https://en.wikipedia.org/wiki/Erd%C5%91s%E2%80%93Bacon_number) for actor-mathematicians.[^ebs]

We can extend this approach to any network. One nerdy example is shared authorship on packages published on the [Comprehensive R Archive Network (CRAN)](https://cran.r-project.org), the go-to repository for packages for the R programming language. {kevinbacran} can help you do this.

## The {kevinbacran} package

You can learn about the package on [the {kevinbacran} site](https://matt-dray.github.io/kevinbacran/)[^pkgdown], see [the code on GitHub](https://github.com/matt-dray/kevinbacran) and feel free to [leave an issue](https://github.com/matt-dray/kevinbacran/issues).

It is currently incomplete, potentially unstable, inefficient and untested. It's main purpose was to sate curiosity and provide some helper functions for the Shiny app.

The package has only four functions[^fun]:

| Function | Description |
| :------ | :------ |
| `kb_combos()` | Fetch CRAN data, clean author names, get author combos per package, create network graph object |
| `kb_pair()` | Gets network graph of the shortest distance between two authors from the `kb_combos()` graph |
| `kb_distance()` | Separation (number of edges) between authors in `kb_pair()` |
| `kb_plot()` | Returns a {ggraph} plot from the `kb_pair()` object |

The package relies heavily on others, particularly [{cranly}](https://github.com/ikosmidis/cranly), [{tidygraph}](https://github.com/thomasp85/tidygraph), [{ggraph}](https://github.com/thomasp85/ggraph), and [{dplyr}](https://dplyr.tidyverse.org/) and [{purrr}](https://purrr.tidyverse.org/). The code for getting author combinations per package is from [Duncan Garmonsway](https://github.com/matt-dray/kevinbacran/pull/8)[^combos].

## The app

We could use the functions mentioned to obtain graphs between all authors and a single named author of our choosing. We're going to use [Hadley Wickham](http://hadley.nz/) as the target, since he is among the most named authors on CRAN. This may be largely explained by his involvement in [the tidyverse suite of packages](https://www.tidyverse.org/) and their use in packages maintained by other authors.

Below is an embedded version of the Shiny app, but [you can access it in full from its own page on shinyapps.io](https://mattdray.shinyapps.io/hadley-number/)[^shinyapps], or [download the code from GitHub](https://github.com/matt-dray/hadley-number).

Type an author name and hit go. You'll get the Hadley Number and a graph to represent a shortest path between them.

```{r embed-slides, echo=FALSE, eval=TRUE}
xaringanExtra::embed_xaringan(
  "https://mattdray.shinyapps.io/hadley-number/",
  ratio = "16:24"
)
```

You may notice:

* that your name is missing (perhaps you're not on CRAN, or a shortest path could not be reached)
* the author names look weird or the same people are listed under variant names ({cranly} is excellent at cleaning names, but the author field is very unstructured; just ask Duncan Garmonsway[^nacnudus])
* that some of the labels overlap and are hard to read (try hitting the Go button again)

You are very welcome to use, improve or ignore the code for the app [on GitHub](https://github.com/matt-dray/hadley-number), where you can [leave issues](https://github.com/matt-dray/hadley-number/issues).

## Read next

The purpose of this post and the app were to give a flavour of the possibilities for {kevinbacran}. Of course, [graph theory](https://en.wikipedia.org/wiki/Graph_theory) is a whole area of study and I haven't incorporated any analysis of the characteristics of the CRAN network here (e.g. measures of centrality or detection of communities).

Fortunately, [Duncan Garmonsway's 'With added bacran'](https://nacnudus.github.io/duncangarmonsway/posts/2019-02-27-with-added-bacran/) blog post covers:

1. Who has the highest Hadley number?
1. What is the longest ‘shortest path’ between any two CRAN authors?
1. What is the largest network disconnected from Hadley?
1. Is Hadley the most central author?

Also, if you choose to use your Hadley Number to gain street cred, you may be interested in [Robin Edwards's Hadley Index repo](https://github.com/geotheory/hadley_index):

> How early did you start following Hadley Wickham? Can be used as a last resort to resolve R arguments.

<div class="tip"> 
`r fontawesome::fa("exclamation-circle")` <b>Note</b>

I later discovered [Ash Baldry has made a similar Shiny app](I later https://ashbaldry.shinyapps.io/wickham-number/) where you can get a Wickham Number, or the degrees of separation between any two CRAN authors.
</div><p>


## Environment {.appendix}

<details><summary>Session info</summary>
```{r sessioninfo, eval=TRUE, echo=FALSE}
cat("Last rendered:", format(Sys.time(), usetz = TRUE)); sessionInfo()
```
</details>

[^shinyapps]: Hosted for free on shinyapps.io. I might take it down at any point. You can download the code if it's no longer hosted online.
[^fun]: Subject to change.
[^pkgdown]: Thanks to the marvellous [{pkgdown} package](https://pkgdown.r-lib.org/) from [Hadley Wickham](http://hadley.nz/) and [Jay Hesselberth](https://hesselberthlab.org/).
[^ebs]: And yes, there's [an Erdős-Bacon-Sabbath Number](http://timeblimp.com/?page_id=195) for mathematician-actor-musicians.
[^combos]:  Originally used code from [William Chase's blog](https://www.williamrchase.com/post/finding-combinations-in-the-tidyverse/).
[^nacnudus]: A post that [uses a similar approach]((https://nacnudus.github.io/duncangarmonsway/posts/2019-02-08-cran-h-index/)) to getting at author names to calculate an h-index for package authors.
