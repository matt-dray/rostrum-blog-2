---
title: Build an R package with {usethis}
date: 2019-11-01
slug: usethis
categories:
  - devtools
  - git
  - github
  - pkgdown
  - r
  - roxygen2
  - testthat
  - usethis
---

![Ossie, a Cabinet Office cat (via @cabinetofficeuk on Twitter).](resources/ossie.jpeg){fig-alt="A black cat lounging across a large wooden table." width="100%"}

## tl;dr

* I gave a talk ([slides](https://matt-dray.github.io/r-pkg-slides/#1), [source](https://github.com/matt-dray/cabinet)) about creating an R package with helper functions from [the {usethis} package](https://usethis.r-lib.org/).
* In the session I created a new package from scratch called {cabinet} ([source](https://github.com/matt-dray/cabinet), [website](https://matt-dray.github.io/cabinet/)) for identifying the cats that live in the UK Government's [Cabinet Office](https://www.gov.uk/government/organisations/cabinet-office).

## Coffee packaging

I gave a talk at a [Cabinet Office Coffee & Coding session](https://co-analysis.github.io/co-coffee-and-coding/) about building R packages from scratch. The emphasis was on [the {usethis} package](https://usethis.r-lib.org/), which contains lots of package-setup functions that make your life easier.

The focus is on beginners who may never have written a package before.

Click on the slides embedded below and cycle through with your arrow keys, or [you can open them fullscreen in a dedicated browser tab](https://matt-dray.github.io/r-pkg-slides/#1). Press the <kbd>P</kbd> button your keyboard to see the presenter notes.

```{r embed-slides, echo=FALSE, eval=TRUE}
xaringanExtra::embed_xaringan(
  "https://matt-dray.github.io/r-pkg-slides/",
  ratio = "4:3",
  border = FALSE
)
```

I made the slides using [Yihui Xie's {xaringan} implementation of remark.js](https://slides.yihui.name/xaringan/) and I used my own {gdstheme} package for the theme ([read the blog](https://www.rostrum.blog/2019/05/24/xaringan-template/) or [see the source on GitHub](https://github.com/matt-dray/gdstheme)). 

## Talk summary

Basically you can make a minimal R package with only:

* `usethis::create_package()` to set up the minimal package structure
* `usethis::create_r()` to set up a script for your functions
* `devtools::document()` to generate minimal documentation from your files

The {usethis} package also helps you set up internal and long-form documentation, testing, version control, a GitHub repository and more. {pkgdown} even generates a website from your documentation to make it more user-friendly.

## Cat-egorise

In the session I live-built a package called {cabinet}. You can:

* look at the package's [source code on GitHub](https://github.com/matt-dray/cabinet/)
* see the package's [website](https://matt-dray.github.io/cabinet/), made with {pkgdown}
* install the package yourself

```{r install, eval=FALSE}
install.packages("remotes")  # if not yet installed
remotes::install_github("matt-dray/cabinet")
```

The package only has one (very important) function, `cabinet_cat()`, which checks whether a supplied character string matches the name of either of [the Cabinet Office's cats](https://www.bbc.co.uk/news/uk-politics-38262832).

Like:

```{r library}
library(cabinet)
cabinet_cat("Ossie")
cabinet_cat("Larry")
cabinet_cat("Garfield")
```

## Excellent resources {#resources}

There are some really good resources out there already. I like the following:

* Hilary Parker's [post](https://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/) to write a package from scratch (beginner)
* Tomas Westlake's [update](https://r-mageddon.netlify.com/post/writing-an-r-package-from-scratch/) to Hilary's post (beginner)
* Emil Hvitfeldt's [post](https://www.hvitfeldt.me/blog/usethis-workflow-for-package-development/), focusing on {usethis} (beginner/intermediate)
* Karl Broman's [site](https://kbroman.org/pkg_primer/), a primer for package developement (intermediate)
* Hadley Wickham's [book](http://r-pkgs.had.co.nz/) (intermediate/advanced)

Tom's post is probably the best place to start if you want to create a package with {usethis} from scratch as a beginner.

## Environment {.appendix}

<details><summary>Session info</summary>
```{r sessioninfo, eval=TRUE, echo=FALSE}
cat("Last rendered:", format(Sys.time(), usetz = TRUE)); sessionInfo()
```
</details>
